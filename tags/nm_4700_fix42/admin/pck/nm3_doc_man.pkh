Create Or Replace Package nm3_doc_man
Is
--<PACKAGE>
-------------------------------------------------------------------------
--   PVCS Identifiers :-
--
--       PVCS id          : $Header:   //new_vm_latest/archives/nm3/admin/pck/nm3_doc_man.pkh-arc   3.7   Jun 22 2016 11:39:52   linesh.sorathia  $
--       Module Name      : $Workfile:   nm3_doc_man.pkh  $
--       Date into PVCS   : $Date:   Jun 22 2016 11:39:52  $
--       Date fetched Out : $Modtime:   Apr 20 2016 19:55:30  $
--       Version          : $Revision:   3.7  $
--       Based on SCCS version : 
------------------------------------------------------------------
--   Copyright (c) 2013 Bentley Systems Incorporated. All rights reserved.
------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>

  -----------
  --constants
  -----------
  --g_sccsid is the SCCS ID for the package
  g_sccsid CONSTANT VARCHAR2(2000) := '$Revision:   3.7  $';

  Type g_association_rec Is Record (featue_table_name Varchar2(500)
                                   ,feature_id        Varchar2(500)) ;
  Type g_association_tab is Table of g_association_rec;

--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
  PRAGMA RESTRICT_REFERENCES(get_version, RNDS, WNPS, WNDS);
  PRAGMA RESTRICT_REFERENCES(get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
--
--<PROC NAME="SYNCHRONISE_DOCUMENT_ID">
-- Corrects the exor feature ID.
PROCEDURE update_feature_id(pi_gateway_name    In  Varchar2
                           ,pi_old_feature_id  In  Varchar2
                           ,pi_new_feature_id  In  Varchar2);

--</PROC>
--
-----------------------------------------------------------------------------
--
--<FUNC NAME="GET_ADDITIONAL_ASSO_DETAILS">
-- Returns the header details for the given gateway.
FUNCTION get_additional_asso_details(pi_gateway_name In Varchar2)
Return Varchar2;
--</FUNC>
--
-----------------------------------------------------------------------------
--<PROC NAME="create_document_and_assocs">
-- This procedure creates document in eB and associates it with the given association tab.
PROCEDURE create_document_and_assocs(pi_template_id     In  Number
                                    ,pi_scope_id        In  Number
                                    ,pi_prefix          In  Varchar2
                                    ,pi_title           In  Varchar2
                                    ,pi_remarks         In  Varchar2
                                    ,pi_date_issued     In  Date
                                    ,pi_association_tab In  g_association_tab
                                    ,pi_called_by       In  Number
                                    ,po_document_id     Out Number);
--</PROC>
--
--<PROC NAME="create_document_and_assocs">
-- This procedure creates document and association for asset surveyor.
PROCEDURE create_document_and_assocs(pi_iit_ne_id       In  nm_inv_items.iit_ne_id%Type
                                    ,pi_inv_type        In  nm_inv_types.nit_inv_type%Type
                                    ,pi_photo           In  Varchar2);

--</PROC>
--
-----------------------------------------------------------------------------
--
--<FUNC NAME="GET_EB_URL">
-- Returns the eB URL.
FUNCTION get_eB_url(pi_gateway_name In Varchar2
                   ,pi_feature_id   In Varchar2)
Return Varchar2;
--</FUNC>
--
-----------------------------------------------------------------------------
--
Procedure check_docs(pi_gateway_name   In  Varchar2
                    ,pi_feature_key    In  Varchar2
                    ,po_icon_name      Out Varchar2);

--
Function get_url_for_gis_session_id(pi_gdo_session_id In  Number)
Return Varchar2;
-- 
End nm3_doc_man;
/