CREATE OR REPLACE PACKAGE higole AS
	/*
	***************************************************
	* Package for handling OLE Interface requirements,
	* these procedures return and handle data requirements
	* from template entities and supply info to the forms
	* higole library when running Word Template Reports.
	*
--       sccsid           : @(#)hig_ole.pkh	1.2 09/25/02
--       Module Name      : hig_ole.pkh
--       Date into SCCS   : 02/09/25 15:54:28
--       Date fetched Out : 07/06/13 14:10:25
--       SCCS Version     : 1.2
--
--
	* *****************************************************
	*/

	FUNCTION strget_template_sql (strtemplate IN VARCHAR2, strpkvalue IN VARCHAR2) RETURN VARCHAR2;
	---Pragma Restrict_References(strGet_Template_SQL, WNDS, WNPS);

	PROCEDURE get_template_sql (strtemplate IN VARCHAR2, strpkvalue IN VARCHAR2,sql_out OUT VARCHAR2);


	FUNCTION strget_procedure_columns(strtemplate IN VARCHAR2, strpkvalue IN VARCHAR2) RETURN VARCHAR2;

	FUNCTION strget_template_pk_column (strtemplatename IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_pk_column, wnds, wnps);

	FUNCTION strget_template_where (strtemplatename IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_where, wnds, wnps);

	FUNCTION strget_template_columns (strtemplate IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_columns , wnds, wnps);

	FUNCTION bolhas_templates(strtable IN VARCHAR2) RETURN BOOLEAN;
	PRAGMA RESTRICT_REFERENCES(bolhas_templates, wnds, wnps);

	FUNCTION strget_template_from (strtemplate IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_from , wnds, wnps);

	FUNCTION strget_template_synonym (strtemplate IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_synonym , wnds, wnps);

	FUNCTION strget_template_procedure (strtemplate IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_procedure , wnds, wnps);

	FUNCTION strget_template_path (strtemplate IN VARCHAR2) RETURN VARCHAR2;
	FUNCTION strget_template_path (strtemplate IN VARCHAR2, strui IN VARCHAR2) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_path , wnds, wnps);

	FUNCTION intget_template_media (strtemplate IN VARCHAR2) RETURN NUMBER;
	PRAGMA RESTRICT_REFERENCES(intget_template_media , wnds, wnps);

	FUNCTION intget_template_location (strtemplate IN VARCHAR2) RETURN NUMBER;
	PRAGMA RESTRICT_REFERENCES(intget_template_location , wnds, wnps);

	FUNCTION get_default_report_type RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(get_default_report_type , wnds, wnps);

	FUNCTION strget_sccs_id RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_sccs_id, wnds, wnps);

	FUNCTION strget_function_type(strfunction IN VARCHAR2) RETURN VARCHAR2;

	PROCEDURE copytemplate(strfromtemplate IN VARCHAR2, strtotemplate IN VARCHAR2);

	FUNCTION bolparsesql(strsql IN VARCHAR2, strerror OUT VARCHAR2) RETURN BOOLEAN;
	/* Overloaded for backward compatibility */
	FUNCTION bolparsesql(strsql IN VARCHAR2, strerror OUT VARCHAR2, interrorpos OUT INTEGER) RETURN BOOLEAN;

	PROCEDURE initialise_template_data(strtemplate IN VARCHAR2, strpkvalue IN VARCHAR2);

	FUNCTION strget_template_column_data(intcolumnpos IN INTEGER) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_column_data, wnds,wnps);

	PROCEDURE initialise_pk_data (strsql IN VARCHAR2);

	FUNCTION strget_template_pk_data(introwpos IN INTEGER) RETURN VARCHAR2;
	PRAGMA RESTRICT_REFERENCES(strget_template_pk_data, wnds, wnps);

	FUNCTION intget_no_of_pks RETURN NUMBER;
	PRAGMA RESTRICT_REFERENCES(intget_no_of_pks, wnds, wnps);

	PROCEDURE resequencetemplate(strtemplate IN VARCHAR2);

	---Package level PLSQL Table to hold template data as opposed to a string
	TYPE g_typvarchartab IS TABLE OF VARCHAR2(2000)
		INDEX BY BINARY_INTEGER;

	g_tabtemplatedata g_typvarchartab;

END higole;
/
