create or replace package nm3ft_mapping as
--<PACKAGE>
-----------------------------------------------------------------------------
--   SCCS Identifiers :-
--
--       sccsid           : @(#)nm3ft_mapping.pkh	1.1 10/06/06
--       Module Name      : nm3ft_mapping.pkh
--       Date into SCCS   : 06/10/06 18:34:39
--       Date fetched Out : 07/06/13 14:11:35
--       SCCS Version     : 1.1
--
--
--   Author : M Huitson
--
--   nm3ft_mapping
--
-----------------------------------------------------------------------------
--	Copyright (c) exor corporation ltd, 2006
-----------------------------------------------------------------------------
--</PACKAGE>
--
--<TYPES>
  TYPE ft_cols_rec IS RECORD(inv_col_name   all_tab_columns.column_name%TYPE
                                 ,inv_col_length number);
  TYPE ft_cols_tab IS TABLE OF ft_cols_rec;
  --
  TYPE ft_table_mapping IS RECORD(inv_col_name   all_tab_columns.column_name%TYPE
                                 ,inv_col_length number
                                 ,assigned       boolean
                                 ,ft_col_name    all_tab_columns.column_name%TYPE);
  TYPE tab_ft_table_mapping IS TABLE OF ft_table_mapping INDEX BY BINARY_INTEGER;
  --
--</TYPES>
--
--<GLOBVAR>
  --
  g_inv_type            nm_inv_types_all.nit_inv_type%TYPE;
  g_inv_numb_attr_cols  tab_ft_table_mapping;
  g_inv_char_attr_cols  tab_ft_table_mapping;
  g_inv_date_attr_cols  tab_ft_table_mapping;
  g_inv_type_cols       tab_ft_table_mapping;
  -----------
  --constants
  -----------
  --g_sccsid is the SCCS ID for the package
  g_sccsid CONSTANT VARCHAR2(2000) := '"@(#)nm3ft_mapping.pkh	1.1 10/06/06"';
  --
--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="map_ft_to_iit">
PROCEDURE map_ft_to_iit(pi_inv_type IN nm_inv_types_all.nit_inv_type%TYPE
                       ,pi_map_pk   IN BOOLEAN DEFAULT TRUE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_iit_column">
FUNCTION get_iit_column(pi_ft_col nm_inv_type_attribs_all.ita_attrib_name%TYPE)
  RETURN all_tab_columns.column_name%TYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_iit_attrib_column">
FUNCTION get_iit_attrib_column(pi_ft_col IN nm_inv_type_attribs_all.ita_attrib_name%TYPE
                              ,pi_format IN nm_inv_type_attribs_all.ita_format%TYPE)
  RETURN all_tab_columns.column_name%TYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_ft_column">
FUNCTION get_ft_column(pi_inv_col IN nm_inv_type_attribs_all.ita_attrib_name%TYPE)
  RETURN all_tab_columns.column_name%TYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_ft_to_iit_map_tab">
PROCEDURE get_ft_to_iit_map_tab(pio_map_tab IN OUT tab_ft_table_mapping);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="debug_map_table">
PROCEDURE debug_map_table(p_only_assigned IN boolean DEFAULT FALSE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
  PRAGMA RESTRICT_REFERENCES(get_version, RNDS, WNPS, WNDS);
  PRAGMA RESTRICT_REFERENCES(get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
end nm3ft_mapping;
/
