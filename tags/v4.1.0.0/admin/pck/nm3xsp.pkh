create or replace package nm3xsp as
--<PACKAGE>
-----------------------------------------------------------------------------
--   SCCS Identifiers :-
--
--       sccsid           : @(#)nm3xsp.pkh	1.1 03/16/04
--       Module Name      : nm3xsp.pkh
--       Date into SCCS   : 04/03/16 10:59:43
--       Date fetched Out : 07/06/13 14:13:59
--       SCCS Version     : 1.1
--
--
--   Author : Darren Cope
--
--    nm3xsp
--
-----------------------------------------------------------------------------
--	Copyright (c) exor corporation ltd, 2002
-----------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>

  -----------
  --constants
  -----------
  --g_sccsid is the SCCS ID for the package
  g_sccsid CONSTANT VARCHAR2(2000) := '"@(#)nm3xsp.pkh	1.1 03/16/04"';

--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="xsp_is_valid">
-- This function checks the validity of an xsp given network type and sub class
FUNCTION xsp_is_valid(pi_nsc_nw_type      IN nm_type_subclass.nsc_nw_type%TYPE
                     ,pi_nsc_sub_class    IN nm_type_subclass.nsc_sub_class%TYPE
                     ,pi_xsp              IN nm_nw_xsp.nwx_x_sect%TYPE) RETURN boolean;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_xsp_descr">
-- This function returns the decription of a given xsp
FUNCTION get_xsp_descr(pi_nsc_nw_type     IN nm_type_subclass.nsc_nw_type%TYPE
                      ,pi_nsc_sub_class   IN nm_type_subclass.nsc_sub_class%TYPE
                      ,pi_xsp             IN nm_nw_xsp.nwx_x_sect%TYPE
                      ,pi_raise_not_found IN boolean DEFAULT TRUE) RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="xsp_valid_for_ne">
-- This function validates the xsp value against the element given
FUNCTION xsp_valid_for_ne(pi_ne_id           IN nm_elements.ne_id%TYPE
                         ,pi_xsp             IN nm_nw_xsp.nwx_x_sect%TYPE) RETURN boolean;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
  PRAGMA RESTRICT_REFERENCES(get_version, RNDS, WNPS, WNDS);
  PRAGMA RESTRICT_REFERENCES(get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
end nm3xsp;
/
