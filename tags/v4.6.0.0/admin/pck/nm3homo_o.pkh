create or replace package nm3homo_o as
--<PACKAGE>
-------------------------------------------------------------------------
--   PVCS Identifiers :-
--
--       PVCS id          : $Header:   //vm_latest/archives/nm3/admin/pck/nm3homo_o.pkh-arc   2.2   May 16 2011 14:44:52   Steve.Cooper  $
--       Module Name      : $Workfile:   nm3homo_o.pkh  $
--       Date into PVCS   : $Date:   May 16 2011 14:44:52  $
--       Date fetched Out : $Modtime:   Apr 01 2011 12:00:24  $
--       Version          : $Revision:   2.2  $
--       Based on SCCS version : 1.1
-------------------------------------------------------------------------
--
--   Author : Jonathan Mills
--
--   Homogenous Inventory Update Object package
--
-----------------------------------------------------------------------------
--	Copyright (c) exor corporation ltd, 2002
-----------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>
  g_sccsid CONSTANT VARCHAR2(2000) := '$Revision:   2.2  $';
--  g_sccsid is the SCCS ID for the package
--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_inv_in_pl_by_obj_type">
--
--
--
FUNCTION get_inv_in_pl_by_obj_type
                       (p_placement_array  nm_placement_array
                       ,p_nm_obj_type      nm_members.nm_obj_type%TYPE
                       ) RETURN nm3type.tab_number;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="end_location_by_pl_and_objtype">
--
--
--
PROCEDURE end_location_by_pl_and_objtype
                       (p_placement_array  nm_placement_array
                       ,p_nm_obj_type      nm_members.nm_obj_type%TYPE
                       ,p_effective_date   DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="end_inv_location_in_pl">
--
--
--
PROCEDURE end_inv_location_in_pl (p_nm_ne_id_in      nm_members.nm_ne_id_in%TYPE
                                 ,p_placement_array  nm_placement_array
                                 ,p_effective_date   DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                                 );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="future_affected_inv_exists">
-- This function returns TRUE if there is future located inventory in the placement array
--  either by INV_TYPE or for a specific iit_ne_id
--
FUNCTION future_affected_inv_exists (p_placement_array nm_placement_array
                                    ,p_inv_type        nm_members.nm_obj_type%TYPE
                                    ,p_effective_date  DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                                    ) RETURN BOOLEAN;
--
FUNCTION future_affected_inv_exists (p_placement_array nm_placement_array
                                    ,p_iit_ne_id       nm_members.nm_ne_id_in%TYPE
                                    ,p_effective_date  DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                                    ) RETURN BOOLEAN;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_future_affected_inv">
-- These functions return the inventory items which are located in the specified
--  placement array which are future located
--
-- This one returns an array of the nm_ne_id_in for the passed inventory type
--
FUNCTION get_future_affected_inv (p_placement_array nm_placement_array
                                 ,p_inv_type        nm_members.nm_obj_type%TYPE
                                 ,p_effective_date  DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                                 ) RETURN nm3type.tab_number;
--
-- This one returns an array of the nm_members.ROWID records for the specified inventory item
--  within the placement array
--
FUNCTION get_future_affected_inv (p_placement_array nm_placement_array
                                 ,p_iit_ne_id       nm_members.nm_ne_id_in%TYPE
                                 ,p_effective_date  DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                                 ) RETURN nm3type.tab_rowid;
--
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="relocate_inv_at_pl">
-- This procedure relocates an inventory item at the passed placement array
--
-- THIS SHOULD NOT BE USED TO COMPLETELY RELOCATE AN INVENTORY ITEM (I.E. ON
--  A PIECE OF NETWORK WHERE IT WAS NOT PREVIOUSLY LOCATED, MERELY TO LOCATE
--  IT ON A SUBSET OF IT'S ORIGINAL LOCATION
--
-- X------------------------X------------------------X       ORIGINAL LOCATION
-- X------------------------X------------------------X----X  NEW LOCATION - NO!
-- X------------------------X-----------X                    NEW LOCATION - FINE
--
-- ALSO - DO NOT USE THIS PROCEDURE FOR CHANGING THE LOCATION OF AN ITEM WHICH
--        IS A DEPENDENT ITEM IN CROSS-ITEM VALIDATION
--
PROCEDURE relocate_inv_at_pl (p_nm_ne_id_in      nm_members.nm_ne_id_in%TYPE
                             ,p_placement_array  nm_placement_array
                             ,p_effective_date   DATE DEFAULT To_Date(Sys_Context('NM3CORE','EFFECTIVE_DATE'),'DD-MON-YYYY')
                             );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
   PRAGMA RESTRICT_REFERENCES (get_version, RNDS, WNPS, WNDS);
   PRAGMA RESTRICT_REFERENCES (get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
end nm3homo_o;
/
