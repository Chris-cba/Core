CREATE OR REPLACE PACKAGE doc_locations_api
AS
--<PACKAGE>
-------------------------------------------------------------------------
--   PVCS Identifiers :-
--
--       PVCS id          : $Header:   //vm_latest/archives/nm3/admin/pck/doc_locations_api.pkh-arc   2.0   Apr 23 2010 14:41:04   aedwards  $
--       Module Name      : $Workfile:   doc_locations_api.pkh  $
--       Date into PVCS   : $Date:   Apr 23 2010 14:41:04  $
--       Date fetched Out : $Modtime:   Apr 23 2010 14:39:54  $
--       Version          : $Revision:   2.0  $
--       Based on SCCS version : 
-------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>

  -----------
  --constants
  -----------
  --g_sccsid is the SCCS ID for the package
  g_sccsid CONSTANT VARCHAR2(2000) := '$Revision:   2.0  $';

--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_TEMP_LOAD_TABLE">
-- 
FUNCTION get_temp_load_table RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC">
-- Get doc location rowtype based on Location Name 
FUNCTION get_dlc ( pi_dlc_name IN doc_locations.dlc_name%TYPE )
  RETURN doc_locations%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC">
-- Get doc location rowtype based on Location ID
FUNCTION get_dlc ( pi_dlc_id IN doc_locations.dlc_id%TYPE )
  RETURN doc_locations%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC">
-- Get doc location rowtype based on DOC ID
FUNCTION get_dlc ( pi_doc_id IN docs.doc_id%TYPE )
  RETURN doc_locations%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC_LOCATION">
-- Get doc location type (i.e. TABLE, URL) and name (i.e. ‘DOC_FILES_ALL’, ‘HTTP://<server>/<share>)
-- based on Doc Location ID
PROCEDURE get_dlc_location ( pi_dlc_id             IN doc_locations.dlc_id%TYPE 
                           , po_dlc_location_type OUT doc_locations.dlc_location_type%TYPE
                           , po_dlc_location_name OUT doc_locations.dlc_location_name%TYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC_LOCATION">
-- Get doc location type (i.e. TABLE, URL) and name (i.e. ‘DOC_FILES_ALL’, ‘HTTP://<server>/<share>)
-- based on Doc Location Name
PROCEDURE get_dlc_location ( pi_dlc_name           IN doc_locations.dlc_name%TYPE 
                           , po_dlc_location_type OUT doc_locations.dlc_location_type%TYPE
                           , po_dlc_location_name OUT doc_locations.dlc_location_name%TYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC_LOCATION">
-- Get doc location type (i.e. TABLE, URL) and name (i.e. ‘DOC_FILES_ALL’, ‘HTTP://<server>/<share>)
-- based on Doc Location ID
PROCEDURE get_dlc_location ( pi_doc_id             IN docs.doc_id%TYPE 
                           , po_dlc_location_type OUT doc_locations.dlc_location_type%TYPE
                           , po_dlc_location_name OUT doc_locations.dlc_location_name%TYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_DLC_TABLE">
-- Get doc location type (i.e. TABLE, URL) and name (i.e. ‘DOC_FILES_ALL’, ‘HTTP://<server>/<share>)
-- based on Doc Location ID
FUNCTION get_dlc_table ( pi_doc_id             IN docs.doc_id%TYPE )
  RETURN VARCHAR2;
  
FUNCTION get_dlt ( pi_doc_id             IN docs.doc_id%TYPE )
  RETURN doc_location_tables%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="MAP_TABLE_TO_DOC_LOCATION">
-- 
PROCEDURE map_table_to_doc_location 
            ( pi_dlc_id     IN doc_locations.dlc_id%TYPE
            , pi_table_name IN user_tables.table_name%TYPE 
            , pi_prefix     IN VARCHAR2 DEFAULT NULL
            , pi_tablespace IN user_tablespaces.tablespace_name%TYPE DEFAULT NULL
            , pi_drop_first IN BOOLEAN DEFAULT FALSE );
--</PROC>
--
-----------------------------------------------------------------------------
--
END doc_locations_api;
/

