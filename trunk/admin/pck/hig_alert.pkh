create or replace package hig_alert
AS
--<PACKAGE>
-------------------------------------------------------------------------
--   PVCS Identifiers :-
--
--       PVCS id          : $Header:   //vm_latest/archives/nm3/admin/pck/hig_alert.pkh-arc   3.0   Apr 14 2010 10:42:32   malexander  $
--       Module Name      : $Workfile:   hig_alert.pkh  $
--       Date into PVCS   : $Date:   Apr 14 2010 10:42:32  $
--       Date fetched Out : $Modtime:   Apr 14 2010 10:42:08  $
--       Version          : $Revision:   3.0  $
--       Based on SCCS version : 
-------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>

  -----------
  --constants
  -----------
  --g_sccsid is the SCCS ID for the package
  g_sccsid CONSTANT VARCHAR2(2000) := '$Revision:   3.0  $'; 
  g_smtp_server   CONSTANT hig_options.hop_value%TYPE := 'gbexor284' ;     --hig.get_sysopt(g_server_sysopt);
  g_smtp_port     CONSTANT hig_options.hop_value%TYPE := '25' ;            --hig.get_sysopt(g_port_sysopt);
  g_smtp_domain   CONSTANT hig_options.hop_value%TYPE := 'exorcorp.local' ;--hig.get_sysopt(g_domain_sysopt); 

--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE send_mail(pi_har_id      IN hig_alert_recipients.har_id%TYPE
                   ,pi_from_screen IN Varchar2 DEFAULT 'N' );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_halt(pi_halt_id IN hig_alert_types.halt_id%TYPE) 
RETURN hig_alert_types%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE create_trg_alert(pi_halt_rec     IN hig_alert_types%ROWTYPE
                          ,pi_param_1      IN Varchar2
                          ,pi_param_2      IN Varchar2
                          ,pi_param_3      IN Varchar2
                          ,pi_param_4      IN Varchar2
                          ,pi_param_5      IN Varchar2
                          ,pi_param_6      IN Varchar2
                          ,pi_param_7      IN Varchar2
                          ,pi_param_8      IN Varchar2
                          ,pi_param_9      IN Varchar2
                          ,pi_param_10     IN Varchar2
                          ,po_subject      OUT Varchar2
                          ,po_email_body   OUT Long);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_hatm(pi_halt_id IN hig_alert_types.halt_id%TYPE)
RETURN hig_alert_type_mail%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_har(pi_har_id IN hig_alert_recipients.har_id%TYPE)
RETURN hig_alert_recipients%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_hatr(pi_hatr_id IN hig_alert_type_recipients.hatr_id%TYPE)
RETURN hig_alert_type_recipients%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_harr(pi_harr_id       IN hig_alert_recipient_rules.harr_id%TYPE)
RETURN hig_alert_recipient_rules%ROWTYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE insert_hal(pi_hal_rec IN OUT hig_alerts%ROWTYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE insert_hael(pi_hael_rec IN hig_alert_error_logs%ROWTYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE upd_hal_status(pi_hal_id IN hig_alerts.hal_id%TYPE
                        ,pi_status IN hig_alerts.hal_status%TYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE insert_har(pi_har_rec IN hig_alert_recipients%ROWTYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
PROCEDURE create_alert(pi_hal_rec IN hig_alerts%ROWTYPE);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="run_notification_batch">
-- This batch will run all notification queries and send out the emails
PROCEDURE run_alert_batch;
--</PROC>
--
----------------------------------------------------------------------------
--
--<PROC NAME="create_trigger">
-- This function creates the Audit trigger
FUNCTION create_trigger(pi_halt_id     IN  hig_alert_types.halt_id%TYPE
                       ,po_error_text OUT Varchar2 ) RETURN Boolean;
--</PROC>
--
----------------------------------------------------------------------------
--
--<PROC NAME="create_trigger">
-- This function creates the Audit trigger
FUNCTION get_trigger_status(pi_trigger_name hig_alert_types.halt_trigger_name%TYPE) 
RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="create_trigger">
-- This function drops the Audit trigger
FUNCTION drop_trigger(pi_halt_id       IN  hig_alert_types.halt_id%TYPE
                     ,pi_trigger_name IN  hig_alert_types.halt_trigger_name%TYPE
                     ,po_error_text   OUT Varchar2) RETURN Boolean;
--</PROC>
--

-----------------------------------------------------------------------------
--
--<PRAGMA>
  PRAGMA RESTRICT_REFERENCES(get_version, RNDS, WNPS, WNDS);
  PRAGMA RESTRICT_REFERENCES(get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
End hig_alert;
/
