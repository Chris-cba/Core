CREATE OR REPLACE PACKAGE nm3context AUTHID CURRENT_USER IS
--<PACKAGE>
--   SCCS Identifiers :-
--
--       sccsid           : @(#)nm3context.pkh	1.2 08/13/01
--       Module Name      : nm3context.pkh
--       Date into SCCS   : 01/08/13 10:35:54
--       Date fetched Out : 07/06/13 14:11:13
--       SCCS Version     : 1.2
--
--
--   Author : Jonathan Mills
--
--   Package for setting/retrieving context values
--
-----------------------------------------------------------------------------
--	Copyright (c) exor corporation ltd, 2001
-----------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>
  g_sccsid      CONSTANT  VARCHAR2(2000) := '"@(#)nm3context.pkh	1.2 08/13/01"';
--  g_sccsid is the SCCS ID for the package
--
-- g_context_namespace is the name of the context used to hold global information
  g_context_namespace          VARCHAR2(30);
--
-- rec_context is a record of attribute_name and data_type of attributes which
--  will be held within the "g_context_namespace" context
  TYPE rec_context IS RECORD
     (attribute_name   VARCHAR2(30)
     ,data_type        VARCHAR2(10)
     );
  TYPE tab_rec_context IS TABLE OF rec_context INDEX BY BINARY_INTEGER;
  g_tab_rec_context tab_rec_context;
--
-- Constants for the datatypes specified within rec_context
  c_date_datatype     CONSTANT VARCHAR2(10) := 'DATE';
  c_number_datatype   CONSTANT VARCHAR2(10) := 'NUMBER';
  c_varchar_datatype  CONSTANT VARCHAR2(10) := 'VARCHAR';
--
-- Constants for checking/setting BOOLEAN context values
  c_true              CONSTANT VARCHAR2(5)  := 'TRUE';
  c_false             CONSTANT VARCHAR2(5)  := 'FALSE';
--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="INITIALISE_CONTEXT">
-- This procedure initialises the NM3_GLOBAL_CONTEXT context and is called
--  from the instantiate_user trigger
--
PROCEDURE initialise_context;
PROCEDURE initialise_context(pi_username varchar2);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="set_context">
-- These 3 overloaded procedures set context values for dates, numbers and
--  Varchar. Any dates will be stored in the context as DD/MM/YYYY.
-- If the context being operated on is NM3_GLOBAL_CONTEXT, and the pi_value
--  passed in is a DATE or a NUMBER and the attribute is not declared as
--  one of those datatypes, then an error will be raised
--
PROCEDURE set_context (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                      ,pi_attribute IN VARCHAR2
                      ,pi_value     IN DATE
                      );
PROCEDURE set_context (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                      ,pi_attribute IN VARCHAR2
                      ,pi_value     IN NUMBER
                      );
PROCEDURE set_context (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                      ,pi_attribute IN VARCHAR2
                      ,pi_value     IN VARCHAR2
                      );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_context">
-- This function returns the character string for the given namespace and
--  attribute
--
FUNCTION get_context (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                     ,pi_attribute IN VARCHAR2
                     ) RETURN VARCHAR2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_context_date">
-- This function returns a date for the given namespace and
--  attribute.
-- If the context being operated on is NM3_GLOBAL_CONTEXT, and the pi_attribute
--  passed in is not a DATE then an error will be raised
--
FUNCTION get_context_date (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                          ,pi_attribute IN VARCHAR2
                          ) RETURN DATE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_context_number">
-- This function returns a number for the given namespace and
--  attribute.
-- If the context being operated on is NM3_GLOBAL_CONTEXT, and the pi_attribute
--  passed in is not a NUMBER then an error will be raised
--
FUNCTION get_context_number (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                            ,pi_attribute IN VARCHAR2
                            ) RETURN NUMBER;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="show_context">
-- This procedure DBMS_OUTPUTs context values.
--  If you call the version with no parameters, all values for NM3_GLOBAL_CONTEXT
--   are displayed.
--  If you call the parameterised version then only the value for the specified
--   attribute will be output
PROCEDURE show_context;
--
PROCEDURE show_context (pi_namespace IN VARCHAR2 DEFAULT g_context_namespace
                       ,pi_attribute IN VARCHAR2
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="show_all_context">
-- This procedure displays all context values
--
PROCEDURE show_all_context (pi_namespace IN VARCHAR2 DEFAULT Null);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="create_instantiate_user_trig">
-- This procedure duplicates the instantiate_user trigger from one schema
--  into another
--
PROCEDURE create_instantiate_user_trig (pi_new_trigger_owner IN VARCHAR2);
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_effective_date">
-- This function returns the effective date. This function serves the same
--  purpose as nm3user.get_effective_date, but is here for use within the
--  date-based views as to minimise view dependencies and the possibility
--  of dependency loops being created
--
FUNCTION get_effective_date RETURN DATE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_namespace">
-- This function returns the value of g_context_namespace
--
FUNCTION get_namespace RETURN VARCHAR2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
   PRAGMA RESTRICT_REFERENCES (get_version, WNPS, WNDS);
   PRAGMA RESTRICT_REFERENCES (get_body_version, WNPS, WNDS);
   PRAGMA RESTRICT_REFERENCES (get_context, WNDS, WNPS);
   PRAGMA RESTRICT_REFERENCES (get_context_date, WNDS, WNPS);
   PRAGMA RESTRICT_REFERENCES (get_context_number, WNDS, WNPS);
   PRAGMA RESTRICT_REFERENCES (get_effective_date, WNDS, WNPS);
   PRAGMA RESTRICT_REFERENCES (get_namespace, WNDS, WNPS);
--</PRAGMA>
--
END nm3context;
/
