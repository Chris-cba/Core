CREATE OR REPLACE package nm3dynsql as
--
--   PVCS Identifiers :-
--
--       sccsid           : $Header:   //vm_latest/archives/nm3/admin/pck/nm3dynsql.pkh-arc   2.0   Jul 23 2007 16:46:54   smarshall  $
--       Module Name      : $Workfile:   nm3dynsql.pkh  $
--       Date into PVCS   : $Date:   Jul 23 2007 16:46:54  $
--       Date fetched Out : $Modtime:   Jul 23 2007 16:46:34  $
--       PVCS Version     : $Revision:   2.0  $
--       Based on sccs version : 
--
--
--   Author : Priidu Tanava
--
--   Package for standard reusable dynamic sql
--
-----------------------------------------------------------------------------
--	Copyright (c) exor corporation ltd, 2005
-----------------------------------------------------------------------------
--
  g_sccsid      CONSTANT  varchar2(2000) := '"$Revision:   2.0  $"';
  
  subtype nm_id_type    is number(9);
  subtype nm_code_type  is varchar2(80);
  --
  subtype code_type     is varchar2(4);
  subtype mp_type       is number;
  subtype seq_type      is number(5);
  
  
  -- this record type can be used to test the route_connectivity cursor
  type route_connectivity_rec is record (
     nm_ne_id_in              nm_id_type
    ,chunk_no                 seq_type
    ,chunk_seq                seq_type
    ,nm_ne_id_of              nm_id_type
    ,nm_begin_mp              mp_type
    ,nm_end_mp                mp_type
    ,measure                  mp_type
    ,end_measure              mp_type
    ,nt_unit_in               nm_id_type
    ,nt_unit_of               nm_id_type
    ,nm_slk                   mp_type
    ,nm_end_slk               mp_type
    ,nm_seg_no                seq_type
    ,nm_seq_no                seq_type
    ,nm_cardinality           seq_type
    ,nm_obj_type              code_type
    ,ne_sub_class             code_type
    ,start_node               nm_id_type
    ,end_node                 nm_id_type
    ,nsc_sub_class            code_type
    ,nsc_seq_no               seq_type
    ,all_start_node_count     seq_type
    ,all_end_node_count       seq_type
    ,dual_start_node_count    seq_type
    ,dual_end_node_count      seq_type
    ,chunk_count              seq_type
  );
   
  
  function get_version return varchar2;
  function get_body_version return varchar2;
  
  
  function sql_effective_date(
     p_bind_count in out integer
    ,p_date in date
    ,p_start_date_column in varchar2
    ,p_end_date_column in varchar2
  ) return varchar2;
  function sql_effective_date(
     p_date in date
    ,p_start_date_column in varchar2
    ,p_end_date_column in varchar2
  ) return varchar2;
  
  function sql_effective_date_tbl return varchar2;
  
  function sql_route_connectivity(
     p_all_routes in boolean
    ,p_route_id in number
    ,p_route_type in varchar2
    ,p_ignore_poe in boolean
  ) return varchar2;
  
  
  function is_circular(
     p_nm_ne_id_in in nm_members_all.nm_ne_id_in%type
    ,p_nm_ne_id_of in nm_members_all.nm_ne_id_of%type
    ,p_connecting_nm_ne_id_of in nm_members_all.nm_ne_id_of%type
  ) return integer;
    
end;
/
