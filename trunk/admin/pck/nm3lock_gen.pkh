CREATE OR REPLACE PACKAGE nm3lock_gen IS
--<PACKAGE>
--
-----------------------------------------------------------------------------
--
--   PVCS Identifiers :-
--
--       pvcsid           : $Header:   //vm_latest/archives/nm3/admin/pck/nm3lock_gen.pkh-arc   2.7   Aug 12 2008 11:01:44   malexander  $
--       Module Name      : $Workfile:   nm3lock_gen.pkh  $
--       Date into PVCS   : $Date:   Aug 12 2008 11:01:44  $
--       Date fetched Out : $Modtime:   Aug 12 2008 10:12:34  $
--       PVCS Version     : $Revision:   2.7  $
--
--
--   Author : Jonathan Mills
--
--   Generated package DO NOT MODIFY
--
--   nm3get_gen header : "@(#)nm3get_gen.pkh	1.3 12/05/05"
--   nm3get_gen body   : "$Revision:   2.7  $"
--
-----------------------------------------------------------------------------
--
--	Copyright (c) exor corporation ltd, 2005
--
-----------------------------------------------------------------------------
--
--</PACKAGE>
--<GLOBVAR>
   g_sccsid          CONSTANT  VARCHAR2(2000) := '"$Revision:   2.7  $"';
--  g_sccsid is the SCCS ID for the package
--
--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_doc">
--
--   Function to lock using DOC_PK constraint
--
FUNCTION lock_doc (pi_doc_id            docs.doc_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DOC_PK constraint
--
PROCEDURE lock_doc (pi_doc_id            docs.doc_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dac">
--
--   Function to lock using DAC_PK constraint
--
FUNCTION lock_dac (pi_dac_id            doc_actions.dac_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DAC_PK constraint
--
PROCEDURE lock_dac (pi_dac_id            doc_actions.dac_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_das">
--
--   Function to lock using DAS_PK constraint
--
FUNCTION lock_das (pi_das_table_name    doc_assocs.das_table_name%TYPE
                  ,pi_das_rec_id        doc_assocs.das_rec_id%TYPE
                  ,pi_das_doc_id        doc_assocs.das_doc_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DAS_PK constraint
--
PROCEDURE lock_das (pi_das_table_name    doc_assocs.das_table_name%TYPE
                   ,pi_das_rec_id        doc_assocs.das_rec_id%TYPE
                   ,pi_das_doc_id        doc_assocs.das_doc_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dcl">
--
--   Function to lock using DCL_PK constraint
--
FUNCTION lock_dcl (pi_dcl_dtp_code      doc_class.dcl_dtp_code%TYPE
                  ,pi_dcl_code          doc_class.dcl_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DCL_PK constraint
--
PROCEDURE lock_dcl (pi_dcl_dtp_code      doc_class.dcl_dtp_code%TYPE
                   ,pi_dcl_code          doc_class.dcl_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DCL_UK1 constraint
--
FUNCTION lock_dcl (pi_dcl_name          doc_class.dcl_name%TYPE
                  ,pi_dcl_dtp_code      doc_class.dcl_dtp_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DCL_UK1 constraint
--
PROCEDURE lock_dcl (pi_dcl_name          doc_class.dcl_name%TYPE
                   ,pi_dcl_dtp_code      doc_class.dcl_dtp_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dcp">
--
--   Function to lock using DCP_PK constraint
--
FUNCTION lock_dcp (pi_dcp_doc_id        doc_copies.dcp_doc_id%TYPE
                  ,pi_dcp_id            doc_copies.dcp_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DCP_PK constraint
--
PROCEDURE lock_dcp (pi_dcp_doc_id        doc_copies.dcp_doc_id%TYPE
                   ,pi_dcp_id            doc_copies.dcp_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ddg">
--
--   Function to lock using DDG_PK constraint
--
FUNCTION lock_ddg (pi_ddg_id            doc_damage.ddg_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DDG_PK constraint
--
PROCEDURE lock_ddg (pi_ddg_id            doc_damage.ddg_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ddc">
--
--   Function to lock using DDC_PK constraint
--
FUNCTION lock_ddc (pi_ddc_id            doc_damage_costs.ddc_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DDC_PK constraint
--
PROCEDURE lock_ddc (pi_ddc_id            doc_damage_costs.ddc_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dec">
--
--   Function to lock using DEC_PK constraint
--
FUNCTION lock_dec (pi_dec_hct_id        doc_enquiry_contacts.dec_hct_id%TYPE
                  ,pi_dec_doc_id        doc_enquiry_contacts.dec_doc_id%TYPE
                  ,pi_dec_type          doc_enquiry_contacts.dec_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DEC_PK constraint
--
PROCEDURE lock_dec (pi_dec_hct_id        doc_enquiry_contacts.dec_hct_id%TYPE
                   ,pi_dec_doc_id        doc_enquiry_contacts.dec_doc_id%TYPE
                   ,pi_dec_type          doc_enquiry_contacts.dec_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_det">
--
--   Function to lock using DET_PK constraint
--
FUNCTION lock_det (pi_det_dtp_code      doc_enquiry_types.det_dtp_code%TYPE
                  ,pi_det_dcl_code      doc_enquiry_types.det_dcl_code%TYPE
                  ,pi_det_code          doc_enquiry_types.det_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DET_PK constraint
--
PROCEDURE lock_det (pi_det_dtp_code      doc_enquiry_types.det_dtp_code%TYPE
                   ,pi_det_dcl_code      doc_enquiry_types.det_dcl_code%TYPE
                   ,pi_det_code          doc_enquiry_types.det_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DET_UNQ constraint
--
FUNCTION lock_det (pi_det_dtp_code      doc_enquiry_types.det_dtp_code%TYPE
                  ,pi_det_dcl_code      doc_enquiry_types.det_dcl_code%TYPE
                  ,pi_det_code          doc_enquiry_types.det_code%TYPE
                  ,pi_det_name          doc_enquiry_types.det_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DET_UNQ constraint
--
PROCEDURE lock_det (pi_det_dtp_code      doc_enquiry_types.det_dtp_code%TYPE
                   ,pi_det_dcl_code      doc_enquiry_types.det_dcl_code%TYPE
                   ,pi_det_code          doc_enquiry_types.det_code%TYPE
                   ,pi_det_name          doc_enquiry_types.det_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dgt">
--
--   Function to lock using DGT_PK constraint
--
FUNCTION lock_dgt (pi_dgt_table_name    doc_gateways.dgt_table_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DGT_PK constraint
--
PROCEDURE lock_dgt (pi_dgt_table_name    doc_gateways.dgt_table_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DGT_UK1 constraint
--
FUNCTION lock_dgt (pi_dgt_table_descr   doc_gateways.dgt_table_descr%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DGT_UK1 constraint
--
PROCEDURE lock_dgt (pi_dgt_table_descr   doc_gateways.dgt_table_descr%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dgs">
--
--   Function to lock using DGS_PK constraint
--
FUNCTION lock_dgs (pi_dgs_dgt_table_name doc_gate_syns.dgs_dgt_table_name%TYPE
                  ,pi_dgs_table_syn      doc_gate_syns.dgs_table_syn%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DGS_PK constraint
--
PROCEDURE lock_dgs (pi_dgs_dgt_table_name doc_gate_syns.dgs_dgt_table_name%TYPE
                   ,pi_dgs_table_syn      doc_gate_syns.dgs_table_syn%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dhi">
--
--   Function to lock using DHI_PK constraint
--
FUNCTION lock_dhi (pi_dhi_doc_id        doc_history.dhi_doc_id%TYPE
                  ,pi_dhi_date_changed  doc_history.dhi_date_changed%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DHI_PK constraint
--
PROCEDURE lock_dhi (pi_dhi_doc_id        doc_history.dhi_doc_id%TYPE
                   ,pi_dhi_date_changed  doc_history.dhi_date_changed%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dky">
--
--   Function to lock using DKY_PK constraint
--
FUNCTION lock_dky (pi_dky_doc_id        doc_keys.dky_doc_id%TYPE
                  ,pi_dky_dkw_key_id    doc_keys.dky_dkw_key_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DKY_PK constraint
--
PROCEDURE lock_dky (pi_dky_doc_id        doc_keys.dky_doc_id%TYPE
                   ,pi_dky_dkw_key_id    doc_keys.dky_dkw_key_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dkw">
--
--   Function to lock using DKW_PK constraint
--
FUNCTION lock_dkw (pi_dkw_key_id        doc_keywords.dkw_key_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DKW_PK constraint
--
PROCEDURE lock_dkw (pi_dkw_key_id        doc_keywords.dkw_key_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dlc">
--
--   Function to lock using DLC_PK constraint
--
FUNCTION lock_dlc (pi_dlc_id            doc_locations.dlc_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DLC_PK constraint
--
PROCEDURE lock_dlc (pi_dlc_id            doc_locations.dlc_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DLC_UK constraint
--
FUNCTION lock_dlc (pi_dlc_name          doc_locations.dlc_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DLC_UK constraint
--
PROCEDURE lock_dlc (pi_dlc_name          doc_locations.dlc_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dmd">
--
--   Function to lock using DMD_PK constraint
--
FUNCTION lock_dmd (pi_dmd_id            doc_media.dmd_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DMD_PK constraint
--
PROCEDURE lock_dmd (pi_dmd_id            doc_media.dmd_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DMD_UK constraint
--
FUNCTION lock_dmd (pi_dmd_name          doc_media.dmd_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DMD_UK constraint
--
PROCEDURE lock_dmd (pi_dmd_name          doc_media.dmd_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dq">
--
--   Function to lock using DQ_PK constraint
--
FUNCTION lock_dq (pi_dq_id             doc_query.dq_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using DQ_PK constraint
--
PROCEDURE lock_dq (pi_dq_id             doc_query.dq_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
--   Function to lock using DQ_UK constraint
--
FUNCTION lock_dq (pi_dq_title          doc_query.dq_title%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using DQ_UK constraint
--
PROCEDURE lock_dq (pi_dq_title          doc_query.dq_title%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dqc">
--
--   Function to lock using DQC_PK constraint
--
FUNCTION lock_dqc (pi_dqc_dq_id         doc_query_cols.dqc_dq_id%TYPE
                  ,pi_dqc_seq_no        doc_query_cols.dqc_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DQC_PK constraint
--
PROCEDURE lock_dqc (pi_dqc_dq_id         doc_query_cols.dqc_dq_id%TYPE
                   ,pi_dqc_seq_no        doc_query_cols.dqc_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dsc">
--
--   Function to lock using DSC_PK constraint
--
FUNCTION lock_dsc (pi_dsc_type          doc_std_costs.dsc_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DSC_PK constraint
--
PROCEDURE lock_dsc (pi_dsc_type          doc_std_costs.dsc_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dsy">
--
--   Function to lock using DSY_PK constraint
--
FUNCTION lock_dsy (pi_dsy_key_id        doc_synonyms.dsy_key_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DSY_PK constraint
--
PROCEDURE lock_dsy (pi_dsy_key_id        doc_synonyms.dsy_key_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dtc">
--
--   Function to lock using DTC_PK constraint
--
FUNCTION lock_dtc (pi_dtc_template_name doc_template_columns.dtc_template_name%TYPE
                  ,pi_dtc_col_alias     doc_template_columns.dtc_col_alias%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DTC_PK constraint
--
PROCEDURE lock_dtc (pi_dtc_template_name doc_template_columns.dtc_template_name%TYPE
                   ,pi_dtc_col_alias     doc_template_columns.dtc_col_alias%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dtg">
--
--   Function to lock using DTG_PK constraint
--
FUNCTION lock_dtg (pi_dtg_template_name doc_template_gateways.dtg_template_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DTG_PK constraint
--
PROCEDURE lock_dtg (pi_dtg_template_name doc_template_gateways.dtg_template_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dtu">
--
--   Function to lock using DTU_PK constraint
--
FUNCTION lock_dtu (pi_dtu_user_id       doc_template_users.dtu_user_id%TYPE
                  ,pi_dtu_template_name doc_template_users.dtu_template_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DTU_PK constraint
--
PROCEDURE lock_dtu (pi_dtu_user_id       doc_template_users.dtu_user_id%TYPE
                   ,pi_dtu_template_name doc_template_users.dtu_template_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_dtp">
--
--   Function to lock using DTP_PK constraint
--
FUNCTION lock_dtp (pi_dtp_code          doc_types.dtp_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DTP_PK constraint
--
PROCEDURE lock_dtp (pi_dtp_code          doc_types.dtp_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using DTP_UK constraint
--
FUNCTION lock_dtp (pi_dtp_name          doc_types.dtp_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using DTP_UK constraint
--
PROCEDURE lock_dtp (pi_dtp_name          doc_types.dtp_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gl">
--
--   Function to lock using GL_PK constraint
--
FUNCTION lock_gl (pi_gl_job_id         gri_lov.gl_job_id%TYPE
                 ,pi_gl_param          gri_lov.gl_param%TYPE
                 ,pi_gl_return         gri_lov.gl_return%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using GL_PK constraint
--
PROCEDURE lock_gl (pi_gl_job_id         gri_lov.gl_job_id%TYPE
                  ,pi_gl_param          gri_lov.gl_param%TYPE
                  ,pi_gl_return         gri_lov.gl_return%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_grm">
--
--   Function to lock using GRM_PK constraint
--
FUNCTION lock_grm (pi_grm_module        gri_modules.grm_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GRM_PK constraint
--
PROCEDURE lock_grm (pi_grm_module        gri_modules.grm_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gmp">
--
--   Function to lock using GMP_PK constraint
--
FUNCTION lock_gmp (pi_gmp_module        gri_module_params.gmp_module%TYPE
                  ,pi_gmp_param         gri_module_params.gmp_param%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GMP_PK constraint
--
PROCEDURE lock_gmp (pi_gmp_module        gri_module_params.gmp_module%TYPE
                   ,pi_gmp_param         gri_module_params.gmp_param%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gp">
--
--   Function to lock using GP_PK constraint
--
FUNCTION lock_gp (pi_gp_param          gri_params.gp_param%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using GP_PK constraint
--
PROCEDURE lock_gp (pi_gp_param          gri_params.gp_param%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gpd">
--
--   Function to lock using GPD_PK constraint
--
FUNCTION lock_gpd (pi_gpd_indep_param   gri_param_dependencies.gpd_indep_param%TYPE
                  ,pi_gpd_module        gri_param_dependencies.gpd_module%TYPE
                  ,pi_gpd_dep_param     gri_param_dependencies.gpd_dep_param%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GPD_PK constraint
--
PROCEDURE lock_gpd (pi_gpd_indep_param   gri_param_dependencies.gpd_indep_param%TYPE
                   ,pi_gpd_module        gri_param_dependencies.gpd_module%TYPE
                   ,pi_gpd_dep_param     gri_param_dependencies.gpd_dep_param%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gpl">
--
--   Function to lock using GPL_PK constraint
--
FUNCTION lock_gpl (pi_gpl_param         gri_param_lookup.gpl_param%TYPE
                  ,pi_gpl_value         gri_param_lookup.gpl_value%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GPL_PK constraint
--
PROCEDURE lock_gpl (pi_gpl_param         gri_param_lookup.gpl_param%TYPE
                   ,pi_gpl_value         gri_param_lookup.gpl_value%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_grr">
--
--   Function to lock using GRR_PK constraint
--
FUNCTION lock_grr (pi_grr_job_id        gri_report_runs.grr_job_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GRR_PK constraint
--
PROCEDURE lock_grr (pi_grr_job_id        gri_report_runs.grr_job_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_grp">
--
--   Function to lock using GRP_PK constraint
--
FUNCTION lock_grp (pi_grp_job_id        gri_run_parameters.grp_job_id%TYPE
                  ,pi_grp_param         gri_run_parameters.grp_param%TYPE
                  ,pi_grp_seq           gri_run_parameters.grp_seq%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GRP_PK constraint
--
PROCEDURE lock_grp (pi_grp_job_id        gri_run_parameters.grp_job_id%TYPE
                   ,pi_grp_param         gri_run_parameters.grp_param%TYPE
                   ,pi_grp_seq           gri_run_parameters.grp_seq%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gsp">
--
--   Function to lock using GSP_PK constraint
--
FUNCTION lock_gsp (pi_gsp_gss_id        gri_saved_params.gsp_gss_id%TYPE
                  ,pi_gsp_seq           gri_saved_params.gsp_seq%TYPE
                  ,pi_gsp_param         gri_saved_params.gsp_param%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GSP_PK constraint
--
PROCEDURE lock_gsp (pi_gsp_gss_id        gri_saved_params.gsp_gss_id%TYPE
                   ,pi_gsp_seq           gri_saved_params.gsp_seq%TYPE
                   ,pi_gsp_param         gri_saved_params.gsp_param%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_gss">
--
--   Function to lock using GSS_PK constraint
--
FUNCTION lock_gss (pi_gss_id            gri_saved_sets.gss_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using GSS_PK constraint
--
PROCEDURE lock_gss (pi_gss_id            gri_saved_sets.gss_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_had">
--
--   Function to lock using HAD_PK constraint
--
FUNCTION lock_had (pi_had_id            hig_address.had_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HAD_PK constraint
--
PROCEDURE lock_had (pi_had_id            hig_address.had_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hco">
--
--   Function to lock using HCO_PK constraint
--
FUNCTION lock_hco (pi_hco_domain        hig_codes.hco_domain%TYPE
                  ,pi_hco_code          hig_codes.hco_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HCO_PK constraint
--
PROCEDURE lock_hco (pi_hco_domain        hig_codes.hco_domain%TYPE
                   ,pi_hco_code          hig_codes.hco_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hcl">
--
--   Function to lock using HCL_PK constraint
--
FUNCTION lock_hcl (pi_hcl_colour        hig_colours.hcl_colour%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HCL_PK constraint
--
PROCEDURE lock_hcl (pi_hcl_colour        hig_colours.hcl_colour%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hct">
--
--   Function to lock using HCT_PK constraint
--
FUNCTION lock_hct (pi_hct_id            hig_contacts.hct_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HCT_PK constraint
--
PROCEDURE lock_hct (pi_hct_id            hig_contacts.hct_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hca">
--
--   Function to lock using HCA_PK constraint
--
FUNCTION lock_hca (pi_hca_hct_id        hig_contact_address.hca_hct_id%TYPE
                  ,pi_hca_had_id        hig_contact_address.hca_had_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HCA_PK constraint
--
PROCEDURE lock_hca (pi_hca_hct_id        hig_contact_address.hca_hct_id%TYPE
                   ,pi_hca_had_id        hig_contact_address.hca_had_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hdo">
--
--   Function to lock using HDO_PK constraint
--
FUNCTION lock_hdo (pi_hdo_domain        hig_domains.hdo_domain%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HDO_PK constraint
--
PROCEDURE lock_hdo (pi_hdo_domain        hig_domains.hdo_domain%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_her">
--
--   Function to lock using HER_PK constraint
--
FUNCTION lock_her (pi_her_no            hig_errors.her_no%TYPE
                  ,pi_her_appl          hig_errors.her_appl%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HER_PK constraint
--
PROCEDURE lock_her (pi_her_no            hig_errors.her_no%TYPE
                   ,pi_her_appl          hig_errors.her_appl%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hht">
--
--   Function to lock using HIG_HD_HHT_PK constraint
--
FUNCTION lock_hht (pi_hht_hhu_hhm_module hig_hd_join_defs.hht_hhu_hhm_module%TYPE
                  ,pi_hht_hhu_seq        hig_hd_join_defs.hht_hhu_seq%TYPE
                  ,pi_hht_join_seq       hig_hd_join_defs.hht_join_seq%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHT_PK constraint
--
PROCEDURE lock_hht (pi_hht_hhu_hhm_module hig_hd_join_defs.hht_hhu_hhm_module%TYPE
                   ,pi_hht_hhu_seq        hig_hd_join_defs.hht_hhu_seq%TYPE
                   ,pi_hht_join_seq       hig_hd_join_defs.hht_join_seq%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hho">
--
--   Function to lock using HIG_HD_HHO_PK constraint
--
FUNCTION lock_hho (pi_hho_hhl_hhu_hhm_module hig_hd_lookup_join_cols.hho_hhl_hhu_hhm_module%TYPE
                  ,pi_hho_hhl_hhu_seq        hig_hd_lookup_join_cols.hho_hhl_hhu_seq%TYPE
                  ,pi_hho_hhl_join_seq       hig_hd_lookup_join_cols.hho_hhl_join_seq%TYPE
                  ,pi_hho_parent_col         hig_hd_lookup_join_cols.hho_parent_col%TYPE
                  ,pi_hho_lookup_col         hig_hd_lookup_join_cols.hho_lookup_col%TYPE
                  ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHO_PK constraint
--
PROCEDURE lock_hho (pi_hho_hhl_hhu_hhm_module hig_hd_lookup_join_cols.hho_hhl_hhu_hhm_module%TYPE
                   ,pi_hho_hhl_hhu_seq        hig_hd_lookup_join_cols.hho_hhl_hhu_seq%TYPE
                   ,pi_hho_hhl_join_seq       hig_hd_lookup_join_cols.hho_hhl_join_seq%TYPE
                   ,pi_hho_parent_col         hig_hd_lookup_join_cols.hho_parent_col%TYPE
                   ,pi_hho_lookup_col         hig_hd_lookup_join_cols.hho_lookup_col%TYPE
                   ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hhl">
--
--   Function to lock using HIG_HD_HHL_PK constraint
--
FUNCTION lock_hhl (pi_hhl_hhu_hhm_module hig_hd_lookup_join_defs.hhl_hhu_hhm_module%TYPE
                  ,pi_hhl_hhu_seq        hig_hd_lookup_join_defs.hhl_hhu_seq%TYPE
                  ,pi_hhl_join_seq       hig_hd_lookup_join_defs.hhl_join_seq%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHL_PK constraint
--
PROCEDURE lock_hhl (pi_hhl_hhu_hhm_module hig_hd_lookup_join_defs.hhl_hhu_hhm_module%TYPE
                   ,pi_hhl_hhu_seq        hig_hd_lookup_join_defs.hhl_hhu_seq%TYPE
                   ,pi_hhl_join_seq       hig_hd_lookup_join_defs.hhl_join_seq%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hhm">
--
--   Function to lock using HIG_HD_HHM_PK constraint
--
FUNCTION lock_hhm (pi_hhm_module        hig_hd_modules.hhm_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHM_PK constraint
--
PROCEDURE lock_hhm (pi_hhm_module        hig_hd_modules.hhm_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hhu">
--
--   Function to lock using HIG_HD_HHU_PK constraint
--
FUNCTION lock_hhu (pi_hhu_hhm_module    hig_hd_mod_uses.hhu_hhm_module%TYPE
                  ,pi_hhu_seq           hig_hd_mod_uses.hhu_seq%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHU_PK constraint
--
PROCEDURE lock_hhu (pi_hhu_hhm_module    hig_hd_mod_uses.hhu_hhm_module%TYPE
                   ,pi_hhu_seq           hig_hd_mod_uses.hhu_seq%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hhc">
--
--   Function to lock using HIG_HD_HHC_PK constraint
--
FUNCTION lock_hhc (pi_hhc_hhu_hhm_module hig_hd_selected_cols.hhc_hhu_hhm_module%TYPE
                  ,pi_hhc_hhu_seq        hig_hd_selected_cols.hhc_hhu_seq%TYPE
                  ,pi_hhc_column_seq     hig_hd_selected_cols.hhc_column_seq%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHC_PK constraint
--
PROCEDURE lock_hhc (pi_hhc_hhu_hhm_module hig_hd_selected_cols.hhc_hhu_hhm_module%TYPE
                   ,pi_hhc_hhu_seq        hig_hd_selected_cols.hhc_hhu_seq%TYPE
                   ,pi_hhc_column_seq     hig_hd_selected_cols.hhc_column_seq%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hhj">
--
--   Function to lock using HIG_HD_HHJ_PK constraint
--
FUNCTION lock_hhj (pi_hhj_hht_hhu_hhm_module   hig_hd_table_join_cols.hhj_hht_hhu_hhm_module%TYPE
                  ,pi_hhj_hht_hhu_parent_table hig_hd_table_join_cols.hhj_hht_hhu_parent_table%TYPE
                  ,pi_hhj_hht_join_seq         hig_hd_table_join_cols.hhj_hht_join_seq%TYPE
                  ,pi_hhj_parent_col           hig_hd_table_join_cols.hhj_parent_col%TYPE
                  ,pi_hhj_hhu_child_table      hig_hd_table_join_cols.hhj_hhu_child_table%TYPE
                  ,pi_hhj_child_col            hig_hd_table_join_cols.hhj_child_col%TYPE
                  ,pi_raise_not_found          BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode        PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode           PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_HD_HHJ_PK constraint
--
PROCEDURE lock_hhj (pi_hhj_hht_hhu_hhm_module   hig_hd_table_join_cols.hhj_hht_hhu_hhm_module%TYPE
                   ,pi_hhj_hht_hhu_parent_table hig_hd_table_join_cols.hhj_hht_hhu_parent_table%TYPE
                   ,pi_hhj_hht_join_seq         hig_hd_table_join_cols.hhj_hht_join_seq%TYPE
                   ,pi_hhj_parent_col           hig_hd_table_join_cols.hhj_parent_col%TYPE
                   ,pi_hhj_hhu_child_table      hig_hd_table_join_cols.hhj_hhu_child_table%TYPE
                   ,pi_hhj_child_col            hig_hd_table_join_cols.hhj_child_col%TYPE
                   ,pi_raise_not_found          BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode        PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode           PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hho">
--
--   Function to lock using HHO_PK constraint
--
FUNCTION lock_hho (pi_hho_id            hig_holidays.hho_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HHO_PK constraint
--
PROCEDURE lock_hho (pi_hho_id            hig_holidays.hho_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hmo">
--
--   Function to lock using HIG_MODULES_PK constraint
--
FUNCTION lock_hmo (pi_hmo_module        hig_modules.hmo_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_MODULES_PK constraint
--
PROCEDURE lock_hmo (pi_hmo_module        hig_modules.hmo_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hmh">
--
--   Function to lock using HMH_PK constraint
--
FUNCTION lock_hmh (pi_hmh_user_id       hig_module_history.hmh_user_id%TYPE
                  ,pi_hmh_seq_no        hig_module_history.hmh_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HMH_PK constraint
--
PROCEDURE lock_hmh (pi_hmh_user_id       hig_module_history.hmh_user_id%TYPE
                   ,pi_hmh_seq_no        hig_module_history.hmh_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HMH_UK constraint
--
FUNCTION lock_hmh (pi_hmh_user_id       hig_module_history.hmh_user_id%TYPE
                  ,pi_hmh_module        hig_module_history.hmh_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HMH_UK constraint
--
PROCEDURE lock_hmh (pi_hmh_user_id       hig_module_history.hmh_user_id%TYPE
                   ,pi_hmh_module        hig_module_history.hmh_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hmk">
--
--   Function to lock using HMK_PK constraint
--
FUNCTION lock_hmk (pi_hmk_hmo_module    hig_module_keywords.hmk_hmo_module%TYPE
                  ,pi_hmk_keyword       hig_module_keywords.hmk_keyword%TYPE
                  ,pi_hmk_owner         hig_module_keywords.hmk_owner%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HMK_PK constraint
--
PROCEDURE lock_hmk (pi_hmk_hmo_module    hig_module_keywords.hmk_hmo_module%TYPE
                   ,pi_hmk_keyword       hig_module_keywords.hmk_keyword%TYPE
                   ,pi_hmk_owner         hig_module_keywords.hmk_owner%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hmr">
--
--   Function to lock using HMR_PK constraint
--
FUNCTION lock_hmr (pi_hmr_module        hig_module_roles.hmr_module%TYPE
                  ,pi_hmr_role          hig_module_roles.hmr_role%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HMR_PK constraint
--
PROCEDURE lock_hmr (pi_hmr_module        hig_module_roles.hmr_module%TYPE
                   ,pi_hmr_role          hig_module_roles.hmr_role%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hmu">
--
--   Function to lock using HMU_PK constraint
--
FUNCTION lock_hmu (pi_hmu_module        hig_module_usages.hmu_module%TYPE
                  ,pi_hmu_usage         hig_module_usages.hmu_usage%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HMU_PK constraint
--
PROCEDURE lock_hmu (pi_hmu_module        hig_module_usages.hmu_module%TYPE
                   ,pi_hmu_usage         hig_module_usages.hmu_usage%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hol">
--
--   Function to lock using HOL_PK constraint
--
FUNCTION lock_hol (pi_hol_id            hig_option_list.hol_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HOL_PK constraint
--
PROCEDURE lock_hol (pi_hol_id            hig_option_list.hol_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hov">
--
--   Function to lock using HOV_PK constraint
--
FUNCTION lock_hov (pi_hov_id            hig_option_values.hov_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HOV_PK constraint
--
PROCEDURE lock_hov (pi_hov_id            hig_option_values.hov_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hpr">
--
--   Function to lock using HPR_PK constraint
--
FUNCTION lock_hpr (pi_hpr_product       hig_products.hpr_product%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HPR_PK constraint
--
PROCEDURE lock_hpr (pi_hpr_product       hig_products.hpr_product%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HPR_UK1 constraint
--
FUNCTION lock_hpr (pi_hpr_product_name  hig_products.hpr_product_name%TYPE
                  ,pi_hpr_version       hig_products.hpr_version%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HPR_UK1 constraint
--
PROCEDURE lock_hpr (pi_hpr_product_name  hig_products.hpr_product_name%TYPE
                   ,pi_hpr_version       hig_products.hpr_version%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hrs">
--
--   Function to lock using HRS_PK constraint
--
FUNCTION lock_hrs (pi_hrs_style_name    hig_report_styles.hrs_style_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HRS_PK constraint
--
PROCEDURE lock_hrs (pi_hrs_style_name    hig_report_styles.hrs_style_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hro">
--
--   Function to lock using HIG_ROLES_PK constraint
--
FUNCTION lock_hro (pi_hro_role          hig_roles.hro_role%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_ROLES_PK constraint
--
PROCEDURE lock_hro (pi_hro_role          hig_roles.hro_role%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hsc">
--
--   Function to lock using HSC_PK constraint
--
FUNCTION lock_hsc (pi_hsc_domain_code   hig_status_codes.hsc_domain_code%TYPE
                  ,pi_hsc_status_code   hig_status_codes.hsc_status_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HSC_PK constraint
--
PROCEDURE lock_hsc (pi_hsc_domain_code   hig_status_codes.hsc_domain_code%TYPE
                   ,pi_hsc_status_code   hig_status_codes.hsc_status_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HSC_UK1 constraint
--
FUNCTION lock_hsc (pi_hsc_domain_code   hig_status_codes.hsc_domain_code%TYPE
                  ,pi_hsc_status_name   hig_status_codes.hsc_status_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HSC_UK1 constraint
--
PROCEDURE lock_hsc (pi_hsc_domain_code   hig_status_codes.hsc_domain_code%TYPE
                   ,pi_hsc_status_name   hig_status_codes.hsc_status_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hsd">
--
--   Function to lock using HSD_PK constraint
--
FUNCTION lock_hsd (pi_hsd_domain_code   hig_status_domains.hsd_domain_code%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HSD_PK constraint
--
PROCEDURE lock_hsd (pi_hsd_domain_code   hig_status_domains.hsd_domain_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hup">
--
--   Function to lock using HUP_PK constraint
--
FUNCTION lock_hup (pi_hup_product       hig_upgrades.hup_product%TYPE
                  ,pi_date_upgraded     hig_upgrades.date_upgraded%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUP_PK constraint
--
PROCEDURE lock_hup (pi_hup_product       hig_upgrades.hup_product%TYPE
                   ,pi_date_upgraded     hig_upgrades.date_upgraded%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hum">
--
--   Function to lock using HUM_PK constraint
--
FUNCTION lock_hum (pi_hum_hmo_module    hig_url_modules.hum_hmo_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUM_PK constraint
--
PROCEDURE lock_hum (pi_hum_hmo_module    hig_url_modules.hum_hmo_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hus">
--
--   Function to lock using HIG_USERS_PK constraint
--
FUNCTION lock_hus (pi_hus_user_id       hig_users.hus_user_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HIG_USERS_PK constraint
--
PROCEDURE lock_hus (pi_hus_user_id       hig_users.hus_user_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HUS_UK constraint
--
FUNCTION lock_hus (pi_hus_username      hig_users.hus_username%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUS_UK constraint
--
PROCEDURE lock_hus (pi_hus_username      hig_users.hus_username%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_huh">
--
--   Function to lock using HUH_PK constraint
--
FUNCTION lock_huh (pi_huh_user_id       hig_user_history.huh_user_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUH_PK constraint
--
PROCEDURE lock_huh (pi_huh_user_id       hig_user_history.huh_user_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_huo">
--
--   Function to lock using HUO_PK constraint
--
FUNCTION lock_huo (pi_huo_hus_user_id   hig_user_options.huo_hus_user_id%TYPE
                  ,pi_huo_id            hig_user_options.huo_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUO_PK constraint
--
PROCEDURE lock_huo (pi_huo_hus_user_id   hig_user_options.huo_hus_user_id%TYPE
                   ,pi_huo_id            hig_user_options.huo_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_hur">
--
--   Function to lock using HUR_PK constraint
--
FUNCTION lock_hur (pi_hur_username      hig_user_roles.hur_username%TYPE
                  ,pi_hur_role          hig_user_roles.hur_role%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HUR_PK constraint
--
PROCEDURE lock_hur (pi_hur_username      hig_user_roles.hur_username%TYPE
                   ,pi_hur_role          hig_user_roles.hur_role%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nag">
--
--   Function to lock using HAG_PK constraint
--
FUNCTION lock_nag (pi_nag_parent_admin_unit nm_admin_groups.nag_parent_admin_unit%TYPE
                  ,pi_nag_child_admin_unit  nm_admin_groups.nag_child_admin_unit%TYPE
                  ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HAG_PK constraint
--
PROCEDURE lock_nag (pi_nag_parent_admin_unit nm_admin_groups.nag_parent_admin_unit%TYPE
                   ,pi_nag_child_admin_unit  nm_admin_groups.nag_child_admin_unit%TYPE
                   ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nau">
--
--   Function to lock using HAU_PK constraint
--
FUNCTION lock_nau (pi_nau_admin_unit    nm_admin_units.nau_admin_unit%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HAU_PK constraint
--
PROCEDURE lock_nau (pi_nau_admin_unit    nm_admin_units.nau_admin_unit%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HAU_UK2 constraint
--
FUNCTION lock_nau (pi_nau_name          nm_admin_units.nau_name%TYPE
                  ,pi_nau_admin_type    nm_admin_units.nau_admin_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HAU_UK2 constraint
--
PROCEDURE lock_nau (pi_nau_name          nm_admin_units.nau_name%TYPE
                   ,pi_nau_admin_type    nm_admin_units.nau_admin_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using HAU_UK1 constraint
--
FUNCTION lock_nau (pi_nau_unit_code     nm_admin_units.nau_unit_code%TYPE
                  ,pi_nau_admin_type    nm_admin_units.nau_admin_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using HAU_UK1 constraint
--
PROCEDURE lock_nau (pi_nau_unit_code     nm_admin_units.nau_unit_code%TYPE
                   ,pi_nau_admin_type    nm_admin_units.nau_admin_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nau_all">
--
--   Function to lock using HAU_PK constraint
--
FUNCTION lock_nau_all (pi_nau_admin_unit    nm_admin_units_all.nau_admin_unit%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using HAU_PK constraint
--
PROCEDURE lock_nau_all (pi_nau_admin_unit    nm_admin_units_all.nau_admin_unit%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using HAU_UK2 constraint
--
FUNCTION lock_nau_all (pi_nau_name          nm_admin_units_all.nau_name%TYPE
                      ,pi_nau_admin_type    nm_admin_units_all.nau_admin_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using HAU_UK2 constraint
--
PROCEDURE lock_nau_all (pi_nau_name          nm_admin_units_all.nau_name%TYPE
                       ,pi_nau_admin_type    nm_admin_units_all.nau_admin_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using HAU_UK1 constraint
--
FUNCTION lock_nau_all (pi_nau_unit_code     nm_admin_units_all.nau_unit_code%TYPE
                      ,pi_nau_admin_type    nm_admin_units_all.nau_admin_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using HAU_UK1 constraint
--
PROCEDURE lock_nau_all (pi_nau_unit_code     nm_admin_units_all.nau_unit_code%TYPE
                       ,pi_nau_admin_type    nm_admin_units_all.nau_admin_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nal">
--
--   Function to lock using NAL_PK constraint
--
FUNCTION lock_nal (pi_nal_id            nm_area_lock.nal_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NAL_PK constraint
--
PROCEDURE lock_nal (pi_nal_id            nm_area_lock.nal_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nars">
--
--   Function to lock using NARS_PK constraint
--
FUNCTION lock_nars (pi_nars_job_id         nm_assets_on_route_store.nars_job_id%TYPE
                   ,pi_nars_ne_id_in       nm_assets_on_route_store.nars_ne_id_in%TYPE
                   ,pi_nars_ne_id_of_begin nm_assets_on_route_store.nars_ne_id_of_begin%TYPE
                   ,pi_nars_begin_mp       nm_assets_on_route_store.nars_begin_mp%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NARS_PK constraint
--
PROCEDURE lock_nars (pi_nars_job_id         nm_assets_on_route_store.nars_job_id%TYPE
                    ,pi_nars_ne_id_in       nm_assets_on_route_store.nars_ne_id_in%TYPE
                    ,pi_nars_ne_id_of_begin nm_assets_on_route_store.nars_ne_id_of_begin%TYPE
                    ,pi_nars_begin_mp       nm_assets_on_route_store.nars_begin_mp%TYPE
                    ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_narsh">
--
--   Function to lock using NARSH_PK constraint
--
FUNCTION lock_narsh (pi_narsh_job_id      nm_assets_on_route_store_head.narsh_job_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    ) RETURN ROWID;
--
--   Procedure to lock using NARSH_PK constraint
--
PROCEDURE lock_narsh (pi_narsh_job_id      nm_assets_on_route_store_head.narsh_job_id%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_narst">
--
--   Function to lock using NARST_PK constraint
--
FUNCTION lock_narst (pi_narst_inv_type    nm_assets_on_route_store_total.narst_inv_type%TYPE
                    ,pi_narst_job_id      nm_assets_on_route_store_total.narst_job_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    ) RETURN ROWID;
--
--   Procedure to lock using NARST_PK constraint
--
PROCEDURE lock_narst (pi_narst_inv_type    nm_assets_on_route_store_total.narst_inv_type%TYPE
                     ,pi_narst_job_id      nm_assets_on_route_store_total.narst_job_id%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_naa">
--
--   Function to lock using NM_AUDIT_PK constraint
--
FUNCTION lock_naa (pi_na_audit_id       nm_audit_actions.na_audit_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_AUDIT_PK constraint
--
PROCEDURE lock_naa (pi_na_audit_id       nm_audit_actions.na_audit_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nach">
--
--   Function to lock using NACH_PK constraint
--
FUNCTION lock_nach (pi_nach_audit_id     nm_audit_changes.nach_audit_id%TYPE
                   ,pi_nach_column_id    nm_audit_changes.nach_column_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NACH_PK constraint
--
PROCEDURE lock_nach (pi_nach_audit_id     nm_audit_changes.nach_audit_id%TYPE
                    ,pi_nach_column_id    nm_audit_changes.nach_column_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nac">
--
--   Function to lock using NM_AUDIT_COLUMNS_PK constraint
--
FUNCTION lock_nac (pi_nac_column_id     nm_audit_columns.nac_column_id%TYPE
                  ,pi_nac_table_name    nm_audit_columns.nac_table_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_AUDIT_COLUMNS_PK constraint
--
PROCEDURE lock_nac (pi_nac_column_id     nm_audit_columns.nac_column_id%TYPE
                   ,pi_nac_table_name    nm_audit_columns.nac_table_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nkc">
--
--   Function to lock using NM_AUDIT_KEY_COLS_PK constraint
--
FUNCTION lock_nkc (pi_nkc_seq_no        nm_audit_key_cols.nkc_seq_no%TYPE
                  ,pi_nkc_table_name    nm_audit_key_cols.nkc_table_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_AUDIT_KEY_COLS_PK constraint
--
PROCEDURE lock_nkc (pi_nkc_seq_no        nm_audit_key_cols.nkc_seq_no%TYPE
                   ,pi_nkc_table_name    nm_audit_key_cols.nkc_table_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_natab">
--
--   Function to lock using NM_AUDIT_TABLES_PK constraint
--
FUNCTION lock_natab (pi_nat_table_name    nm_audit_tables.nat_table_name%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    ) RETURN ROWID;
--
--   Procedure to lock using NM_AUDIT_TABLES_PK constraint
--
PROCEDURE lock_natab (pi_nat_table_name    nm_audit_tables.nat_table_name%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_natmp">
--
--   Function to lock using NM_AUDIT_TEMP_PK constraint
--
FUNCTION lock_natmp (pi_nat_audit_id      nm_audit_temp.nat_audit_id%TYPE
                    ,pi_nat_old_or_new    nm_audit_temp.nat_old_or_new%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    ) RETURN ROWID;
--
--   Procedure to lock using NM_AUDIT_TEMP_PK constraint
--
PROCEDURE lock_natmp (pi_nat_audit_id      nm_audit_temp.nat_audit_id%TYPE
                     ,pi_nat_old_or_new    nm_audit_temp.nat_old_or_new%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nat">
--
--   Function to lock using NAT_PK constraint
--
FUNCTION lock_nat (pi_nat_admin_type    nm_au_types.nat_admin_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NAT_PK constraint
--
PROCEDURE lock_nat (pi_nat_admin_type    nm_au_types.nat_admin_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsty">
--
--   Function to lock using NSTY_PK constraint
--
FUNCTION lock_nsty (pi_nsty_id           nm_au_sub_types.nsty_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NSTY_PK constraint
--
PROCEDURE lock_nsty (pi_nsty_id           nm_au_sub_types.nsty_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NSTY_UK1 constraint
--
FUNCTION lock_nsty (pi_nsty_nat_admin_type nm_au_sub_types.nsty_nat_admin_type%TYPE
                   ,pi_nsty_sub_type       nm_au_sub_types.nsty_sub_type%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NSTY_UK1 constraint
--
PROCEDURE lock_nsty (pi_nsty_nat_admin_type nm_au_sub_types.nsty_nat_admin_type%TYPE
                    ,pi_nsty_sub_type       nm_au_sub_types.nsty_sub_type%TYPE
                    ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_natg">
--
--   Function to lock using NATG_PK constraint
--
FUNCTION lock_natg (pi_natg_nat_admin_type nm_au_types_groupings.natg_nat_admin_type%TYPE
                   ,pi_natg_grouping       nm_au_types_groupings.natg_grouping%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NATG_PK constraint
--
PROCEDURE lock_natg (pi_natg_nat_admin_type nm_au_types_groupings.natg_nat_admin_type%TYPE
                    ,pi_natg_grouping       nm_au_types_groupings.natg_grouping%TYPE
                    ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nd">
--
--   Function to lock using ND_PK constraint
--
FUNCTION lock_nd (pi_nd_id             nm_dbug.nd_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using ND_PK constraint
--
PROCEDURE lock_nd (pi_nd_id             nm_dbug.nd_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ne">
--
--   Function to lock using NE_PK constraint
--
FUNCTION lock_ne (pi_ne_id             nm_elements.ne_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NE_PK constraint
--
PROCEDURE lock_ne (pi_ne_id             nm_elements.ne_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
--   Function to lock using NE_UK constraint
--
FUNCTION lock_ne (pi_ne_unique         nm_elements.ne_unique%TYPE
                 ,pi_ne_nt_type        nm_elements.ne_nt_type%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NE_UK constraint
--
PROCEDURE lock_ne (pi_ne_unique         nm_elements.ne_unique%TYPE
                  ,pi_ne_nt_type        nm_elements.ne_nt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ne_all">
--
--   Function to lock using NE_PK constraint
--
FUNCTION lock_ne_all (pi_ne_id             nm_elements_all.ne_id%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using NE_PK constraint
--
PROCEDURE lock_ne_all (pi_ne_id             nm_elements_all.ne_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--
--   Function to lock using NE_UK constraint
--
FUNCTION lock_ne_all (pi_ne_unique         nm_elements_all.ne_unique%TYPE
                     ,pi_ne_nt_type        nm_elements_all.ne_nt_type%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using NE_UK constraint
--
PROCEDURE lock_ne_all (pi_ne_unique         nm_elements_all.ne_unique%TYPE
                      ,pi_ne_nt_type        nm_elements_all.ne_nt_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_neh">
--
--   Function to lock using NEH_PK constraint
--
FUNCTION lock_neh (pi_neh_id            nm_element_history.neh_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NEH_PK constraint
--
PROCEDURE lock_neh (pi_neh_id            nm_element_history.neh_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ner">
--
--   Function to lock using NER_PK constraint
--
FUNCTION lock_ner (pi_ner_id            nm_errors.ner_id%TYPE
                  ,pi_ner_appl          nm_errors.ner_appl%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NER_PK constraint
--
PROCEDURE lock_ner (pi_ner_id            nm_errors.ner_id%TYPE
                   ,pi_ner_appl          nm_errors.ner_appl%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nel">
--
--   Function to lock using NEL_PK constraint
--
FUNCTION lock_nel (pi_nel_id            nm_event_log.nel_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NEL_PK constraint
--
PROCEDURE lock_nel (pi_nel_id            nm_event_log.nel_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_net">
--
--   Function to lock using NET_PK constraint
--
FUNCTION lock_net (pi_net_type          nm_event_types.net_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NET_PK constraint
--
PROCEDURE lock_net (pi_net_type          nm_event_types.net_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NET_UK constraint
--
FUNCTION lock_net (pi_net_unique        nm_event_types.net_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NET_UK constraint
--
PROCEDURE lock_net (pi_net_unique        nm_event_types.net_unique%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nfp">
--
--   Function to lock using NFP_PK constraint
--
FUNCTION lock_nfp (pi_nfp_id            nm_fill_patterns.nfp_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NFP_PK constraint
--
PROCEDURE lock_nfp (pi_nfp_id            nm_fill_patterns.nfp_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngit">
--
--   Function to lock using NGIT_PK constraint
--
FUNCTION lock_ngit (pi_ngit_ngt_group_type nm_group_inv_types.ngit_ngt_group_type%TYPE
                   ,pi_ngit_nit_inv_type   nm_group_inv_types.ngit_nit_inv_type%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NGIT_PK constraint
--
PROCEDURE lock_ngit (pi_ngit_ngt_group_type nm_group_inv_types.ngit_ngt_group_type%TYPE
                    ,pi_ngit_nit_inv_type   nm_group_inv_types.ngit_nit_inv_type%TYPE
                    ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NGIT_UK constraint
--
FUNCTION lock_ngit (pi_ngit_ngt_group_type nm_group_inv_types.ngit_ngt_group_type%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NGIT_UK constraint
--
PROCEDURE lock_ngit (pi_ngit_ngt_group_type nm_group_inv_types.ngit_ngt_group_type%TYPE
                    ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngil">
--
--   Function to lock using NGIL_PK constraint
--
FUNCTION lock_ngil (pi_ngil_ne_ne_id     nm_group_inv_link.ngil_ne_ne_id%TYPE
                   ,pi_ngil_iit_ne_id    nm_group_inv_link.ngil_iit_ne_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NGIL_PK constraint
--
PROCEDURE lock_ngil (pi_ngil_ne_ne_id     nm_group_inv_link.ngil_ne_ne_id%TYPE
                    ,pi_ngil_iit_ne_id    nm_group_inv_link.ngil_iit_ne_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NGIL_UK constraint
--
FUNCTION lock_ngil (pi_ngil_ne_ne_id     nm_group_inv_link.ngil_ne_ne_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NGIL_UK constraint
--
PROCEDURE lock_ngil (pi_ngil_ne_ne_id     nm_group_inv_link.ngil_ne_ne_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngil_all">
--
--   Function to lock using NGIL_PK constraint
--
FUNCTION lock_ngil_all (pi_ngil_ne_ne_id     nm_group_inv_link_all.ngil_ne_ne_id%TYPE
                       ,pi_ngil_iit_ne_id    nm_group_inv_link_all.ngil_iit_ne_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       ) RETURN ROWID;
--
--   Procedure to lock using NGIL_PK constraint
--
PROCEDURE lock_ngil_all (pi_ngil_ne_ne_id     nm_group_inv_link_all.ngil_ne_ne_id%TYPE
                        ,pi_ngil_iit_ne_id    nm_group_inv_link_all.ngil_iit_ne_id%TYPE
                        ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                        ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                        ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                        );
--
--   Function to lock using NGIL_UK constraint
--
FUNCTION lock_ngil_all (pi_ngil_ne_ne_id     nm_group_inv_link_all.ngil_ne_ne_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       ) RETURN ROWID;
--
--   Procedure to lock using NGIL_UK constraint
--
PROCEDURE lock_ngil_all (pi_ngil_ne_ne_id     nm_group_inv_link_all.ngil_ne_ne_id%TYPE
                        ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                        ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                        ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                        );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngr">
--
--   Function to lock using NGR_PK constraint
--
FUNCTION lock_ngr (pi_ngr_parent_group_type nm_group_relations.ngr_parent_group_type%TYPE
                  ,pi_ngr_child_group_type  nm_group_relations.ngr_child_group_type%TYPE
                  ,pi_ngr_start_date        nm_group_relations.ngr_start_date%TYPE
                  ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NGR_PK constraint
--
PROCEDURE lock_ngr (pi_ngr_parent_group_type nm_group_relations.ngr_parent_group_type%TYPE
                   ,pi_ngr_child_group_type  nm_group_relations.ngr_child_group_type%TYPE
                   ,pi_ngr_start_date        nm_group_relations.ngr_start_date%TYPE
                   ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NGR_PK constraint (without start date for Datetrack View)
--
FUNCTION lock_ngr (pi_ngr_parent_group_type nm_group_relations.ngr_parent_group_type%TYPE
                  ,pi_ngr_child_group_type  nm_group_relations.ngr_child_group_type%TYPE
                  ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NGR_PK constraint (without start date for Datetrack View)
--
PROCEDURE lock_ngr (pi_ngr_parent_group_type nm_group_relations.ngr_parent_group_type%TYPE
                   ,pi_ngr_child_group_type  nm_group_relations.ngr_child_group_type%TYPE
                   ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngr_all">
--
--   Function to lock using NGR_PK constraint
--
FUNCTION lock_ngr_all (pi_ngr_parent_group_type nm_group_relations_all.ngr_parent_group_type%TYPE
                      ,pi_ngr_child_group_type  nm_group_relations_all.ngr_child_group_type%TYPE
                      ,pi_ngr_start_date        nm_group_relations_all.ngr_start_date%TYPE
                      ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NGR_PK constraint
--
PROCEDURE lock_ngr_all (pi_ngr_parent_group_type nm_group_relations_all.ngr_parent_group_type%TYPE
                       ,pi_ngr_child_group_type  nm_group_relations_all.ngr_child_group_type%TYPE
                       ,pi_ngr_start_date        nm_group_relations_all.ngr_start_date%TYPE
                       ,pi_raise_not_found       BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode     PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode        PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngt">
--
--   Function to lock using NGT_PK constraint
--
FUNCTION lock_ngt (pi_ngt_group_type    nm_group_types.ngt_group_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NGT_PK constraint
--
PROCEDURE lock_ngt (pi_ngt_group_type    nm_group_types.ngt_group_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ngt_all">
--
--   Function to lock using NGT_PK constraint
--
FUNCTION lock_ngt_all (pi_ngt_group_type    nm_group_types_all.ngt_group_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NGT_PK constraint
--
PROCEDURE lock_ngt_all (pi_ngt_group_type    nm_group_types_all.ngt_group_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ial">
--
--   Function to lock using IAL_PK constraint
--
FUNCTION lock_ial (pi_ial_domain        nm_inv_attri_lookup.ial_domain%TYPE
                  ,pi_ial_value         nm_inv_attri_lookup.ial_value%TYPE
                  ,pi_ial_start_date    nm_inv_attri_lookup.ial_start_date%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IAL_PK constraint
--
PROCEDURE lock_ial (pi_ial_domain        nm_inv_attri_lookup.ial_domain%TYPE
                   ,pi_ial_value         nm_inv_attri_lookup.ial_value%TYPE
                   ,pi_ial_start_date    nm_inv_attri_lookup.ial_start_date%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using IAL_PK constraint (without start date for Datetrack View)
--
FUNCTION lock_ial (pi_ial_domain        nm_inv_attri_lookup.ial_domain%TYPE
                  ,pi_ial_value         nm_inv_attri_lookup.ial_value%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IAL_PK constraint (without start date for Datetrack View)
--
PROCEDURE lock_ial (pi_ial_domain        nm_inv_attri_lookup.ial_domain%TYPE
                   ,pi_ial_value         nm_inv_attri_lookup.ial_value%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ial_all">
--
--   Function to lock using IAL_PK constraint
--
FUNCTION lock_ial_all (pi_ial_domain        nm_inv_attri_lookup_all.ial_domain%TYPE
                      ,pi_ial_value         nm_inv_attri_lookup_all.ial_value%TYPE
                      ,pi_ial_start_date    nm_inv_attri_lookup_all.ial_start_date%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using IAL_PK constraint
--
PROCEDURE lock_ial_all (pi_ial_domain        nm_inv_attri_lookup_all.ial_domain%TYPE
                       ,pi_ial_value         nm_inv_attri_lookup_all.ial_value%TYPE
                       ,pi_ial_start_date    nm_inv_attri_lookup_all.ial_start_date%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nic">
--
--   Function to lock using NIC_PK constraint
--
FUNCTION lock_nic (pi_nic_category      nm_inv_categories.nic_category%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NIC_PK constraint
--
PROCEDURE lock_nic (pi_nic_category      nm_inv_categories.nic_category%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_icm">
--
--   Function to lock using ICM_PK constraint
--
FUNCTION lock_icm (pi_icm_nic_category  nm_inv_category_modules.icm_nic_category%TYPE
                  ,pi_icm_hmo_module    nm_inv_category_modules.icm_hmo_module%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ICM_PK constraint
--
PROCEDURE lock_icm (pi_icm_nic_category  nm_inv_category_modules.icm_nic_category%TYPE
                   ,pi_icm_hmo_module    nm_inv_category_modules.icm_hmo_module%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_id">
--
--   Function to lock using ID_PK constraint
--
FUNCTION lock_id (pi_id_domain         nm_inv_domains.id_domain%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using ID_PK constraint
--
PROCEDURE lock_id (pi_id_domain         nm_inv_domains.id_domain%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_id_all">
--
--   Function to lock using ID_PK constraint
--
FUNCTION lock_id_all (pi_id_domain         nm_inv_domains_all.id_domain%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using ID_PK constraint
--
PROCEDURE lock_id_all (pi_id_domain         nm_inv_domains_all.id_domain%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_iit">
--
--   Function to lock using INV_ITEMS_ALL_PK constraint
--
FUNCTION lock_iit (pi_iit_ne_id         nm_inv_items.iit_ne_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using INV_ITEMS_ALL_PK constraint
--
PROCEDURE lock_iit (pi_iit_ne_id         nm_inv_items.iit_ne_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using IIT_UK constraint
--
FUNCTION lock_iit (pi_iit_primary_key   nm_inv_items.iit_primary_key%TYPE
                  ,pi_iit_inv_type      nm_inv_items.iit_inv_type%TYPE
                  ,pi_iit_start_date    nm_inv_items.iit_start_date%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IIT_UK constraint
--
PROCEDURE lock_iit (pi_iit_primary_key   nm_inv_items.iit_primary_key%TYPE
                   ,pi_iit_inv_type      nm_inv_items.iit_inv_type%TYPE
                   ,pi_iit_start_date    nm_inv_items.iit_start_date%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using IIT_UK constraint (without start date for Datetrack View)
--
FUNCTION lock_iit (pi_iit_primary_key   nm_inv_items.iit_primary_key%TYPE
                  ,pi_iit_inv_type      nm_inv_items.iit_inv_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IIT_UK constraint (without start date for Datetrack View)
--
PROCEDURE lock_iit (pi_iit_primary_key   nm_inv_items.iit_primary_key%TYPE
                   ,pi_iit_inv_type      nm_inv_items.iit_inv_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_iit_all">
--
--   Function to lock using INV_ITEMS_ALL_PK constraint
--
FUNCTION lock_iit_all (pi_iit_ne_id         nm_inv_items_all.iit_ne_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using INV_ITEMS_ALL_PK constraint
--
PROCEDURE lock_iit_all (pi_iit_ne_id         nm_inv_items_all.iit_ne_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using IIT_UK constraint
--
FUNCTION lock_iit_all (pi_iit_primary_key   nm_inv_items_all.iit_primary_key%TYPE
                      ,pi_iit_inv_type      nm_inv_items_all.iit_inv_type%TYPE
                      ,pi_iit_start_date    nm_inv_items_all.iit_start_date%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using IIT_UK constraint
--
PROCEDURE lock_iit_all (pi_iit_primary_key   nm_inv_items_all.iit_primary_key%TYPE
                       ,pi_iit_inv_type      nm_inv_items_all.iit_inv_type%TYPE
                       ,pi_iit_start_date    nm_inv_items_all.iit_start_date%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_iig">
--
--   Function to lock using IIG_PK constraint
--
FUNCTION lock_iig (pi_iig_top_id        nm_inv_item_groupings.iig_top_id%TYPE
                  ,pi_iig_item_id       nm_inv_item_groupings.iig_item_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IIG_PK constraint
--
PROCEDURE lock_iig (pi_iig_top_id        nm_inv_item_groupings.iig_top_id%TYPE
                   ,pi_iig_item_id       nm_inv_item_groupings.iig_item_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using IIG_UK constraint
--
FUNCTION lock_iig (pi_iig_item_id       nm_inv_item_groupings.iig_item_id%TYPE
                  ,pi_iig_parent_id     nm_inv_item_groupings.iig_parent_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using IIG_UK constraint
--
PROCEDURE lock_iig (pi_iig_item_id       nm_inv_item_groupings.iig_item_id%TYPE
                   ,pi_iig_parent_id     nm_inv_item_groupings.iig_parent_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_iig_all">
--
--   Function to lock using IIG_PK constraint
--
FUNCTION lock_iig_all (pi_iig_top_id        nm_inv_item_groupings_all.iig_top_id%TYPE
                      ,pi_iig_item_id       nm_inv_item_groupings_all.iig_item_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using IIG_PK constraint
--
PROCEDURE lock_iig_all (pi_iig_top_id        nm_inv_item_groupings_all.iig_top_id%TYPE
                       ,pi_iig_item_id       nm_inv_item_groupings_all.iig_item_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using IIG_UK constraint
--
FUNCTION lock_iig_all (pi_iig_item_id       nm_inv_item_groupings_all.iig_item_id%TYPE
                      ,pi_iig_parent_id     nm_inv_item_groupings_all.iig_parent_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using IIG_UK constraint
--
PROCEDURE lock_iig_all (pi_iig_item_id       nm_inv_item_groupings_all.iig_item_id%TYPE
                       ,pi_iig_parent_id     nm_inv_item_groupings_all.iig_parent_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nin">
--
--   Function to lock using NIN_PK constraint
--
FUNCTION lock_nin (pi_nin_nit_inv_code  nm_inv_nw.nin_nit_inv_code%TYPE
                  ,pi_nin_nw_type       nm_inv_nw.nin_nw_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NIN_PK constraint
--
PROCEDURE lock_nin (pi_nin_nit_inv_code  nm_inv_nw.nin_nit_inv_code%TYPE
                   ,pi_nin_nw_type       nm_inv_nw.nin_nw_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nin_all">
--
--   Function to lock using NIN_PK constraint
--
FUNCTION lock_nin_all (pi_nin_nit_inv_code  nm_inv_nw_all.nin_nit_inv_code%TYPE
                      ,pi_nin_nw_type       nm_inv_nw_all.nin_nw_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NIN_PK constraint
--
PROCEDURE lock_nin_all (pi_nin_nit_inv_code  nm_inv_nw_all.nin_nit_inv_code%TYPE
                       ,pi_nin_nw_type       nm_inv_nw_all.nin_nw_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nith">
--
--   Function to lock using NITH_PK constraint
--
FUNCTION lock_nith (pi_nith_nth_theme_id nm_inv_themes.nith_nth_theme_id%TYPE
                   ,pi_nith_nit_id       nm_inv_themes.nith_nit_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NITH_PK constraint
--
PROCEDURE lock_nith (pi_nith_nth_theme_id nm_inv_themes.nith_nth_theme_id%TYPE
                    ,pi_nith_nit_id       nm_inv_themes.nith_nit_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nit">
--
--   Function to lock using ITY_PK constraint
--
FUNCTION lock_nit (pi_nit_inv_type      nm_inv_types.nit_inv_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITY_PK constraint
--
PROCEDURE lock_nit (pi_nit_inv_type      nm_inv_types.nit_inv_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nit_all">
--
--   Function to lock using ITY_PK constraint
--
FUNCTION lock_nit_all (pi_nit_inv_type      nm_inv_types_all.nit_inv_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using ITY_PK constraint
--
PROCEDURE lock_nit_all (pi_nit_inv_type      nm_inv_types_all.nit_inv_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ita">
--
--   Function to lock using ITA_PK constraint
--
FUNCTION lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                  ,pi_ita_attrib_name   nm_inv_type_attribs.ita_attrib_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITA_PK constraint
--
PROCEDURE lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                   ,pi_ita_attrib_name   nm_inv_type_attribs.ita_attrib_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using ITA_UK_VIEW_COL constraint
--
FUNCTION lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                  ,pi_ita_view_col_name nm_inv_type_attribs.ita_view_col_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITA_UK_VIEW_COL constraint
--
PROCEDURE lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                   ,pi_ita_view_col_name nm_inv_type_attribs.ita_view_col_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using ITA_UK_VIEW_ATTRI constraint
--
FUNCTION lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                  ,pi_ita_view_attri    nm_inv_type_attribs.ita_view_attri%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITA_UK_VIEW_ATTRI constraint
--
PROCEDURE lock_ita (pi_ita_inv_type      nm_inv_type_attribs.ita_inv_type%TYPE
                   ,pi_ita_view_attri    nm_inv_type_attribs.ita_view_attri%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ita_all">
--
--   Function to lock using ITA_PK constraint
--
FUNCTION lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                      ,pi_ita_attrib_name   nm_inv_type_attribs_all.ita_attrib_name%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using ITA_PK constraint
--
PROCEDURE lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                       ,pi_ita_attrib_name   nm_inv_type_attribs_all.ita_attrib_name%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using ITA_UK_VIEW_COL constraint
--
FUNCTION lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                      ,pi_ita_view_col_name nm_inv_type_attribs_all.ita_view_col_name%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using ITA_UK_VIEW_COL constraint
--
PROCEDURE lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                       ,pi_ita_view_col_name nm_inv_type_attribs_all.ita_view_col_name%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using ITA_UK_VIEW_ATTRI constraint
--
FUNCTION lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                      ,pi_ita_view_attri    nm_inv_type_attribs_all.ita_view_attri%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using ITA_UK_VIEW_ATTRI constraint
--
PROCEDURE lock_ita_all (pi_ita_inv_type      nm_inv_type_attribs_all.ita_inv_type%TYPE
                       ,pi_ita_view_attri    nm_inv_type_attribs_all.ita_view_attri%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_itb">
--
--   Function to lock using ITB_PK constraint
--
FUNCTION lock_itb (pi_itb_inv_type      nm_inv_type_attrib_bandings.itb_inv_type%TYPE
                  ,pi_itb_attrib_name   nm_inv_type_attrib_bandings.itb_attrib_name%TYPE
                  ,pi_itb_banding_id    nm_inv_type_attrib_bandings.itb_banding_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITB_PK constraint
--
PROCEDURE lock_itb (pi_itb_inv_type      nm_inv_type_attrib_bandings.itb_inv_type%TYPE
                   ,pi_itb_attrib_name   nm_inv_type_attrib_bandings.itb_attrib_name%TYPE
                   ,pi_itb_banding_id    nm_inv_type_attrib_bandings.itb_banding_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using ITB_UK constraint
--
FUNCTION lock_itb (pi_itb_banding_id    nm_inv_type_attrib_bandings.itb_banding_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITB_UK constraint
--
PROCEDURE lock_itb (pi_itb_banding_id    nm_inv_type_attrib_bandings.itb_banding_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_itd">
--
--   Function to lock using ITD_PK constraint
--
FUNCTION lock_itd (pi_itd_band_seq       nm_inv_type_attrib_band_dets.itd_band_seq%TYPE
                  ,pi_itd_inv_type       nm_inv_type_attrib_band_dets.itd_inv_type%TYPE
                  ,pi_itd_attrib_name    nm_inv_type_attrib_band_dets.itd_attrib_name%TYPE
                  ,pi_itd_itb_banding_id nm_inv_type_attrib_band_dets.itd_itb_banding_id%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITD_PK constraint
--
PROCEDURE lock_itd (pi_itd_band_seq       nm_inv_type_attrib_band_dets.itd_band_seq%TYPE
                   ,pi_itd_inv_type       nm_inv_type_attrib_band_dets.itd_inv_type%TYPE
                   ,pi_itd_attrib_name    nm_inv_type_attrib_band_dets.itd_attrib_name%TYPE
                   ,pi_itd_itb_banding_id nm_inv_type_attrib_band_dets.itd_itb_banding_id%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nias">
--
--   Function to lock using NIAS_PK constraint
--
FUNCTION lock_nias (pi_nias_id           nm_inv_attribute_sets.nias_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NIAS_PK constraint
--
PROCEDURE lock_nias (pi_nias_id           nm_inv_attribute_sets.nias_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsit">
--
--   Function to lock using NSIT_PK constraint
--
FUNCTION lock_nsit (pi_nsit_nias_id      nm_inv_attribute_set_inv_types.nsit_nias_id%TYPE
                   ,pi_nsit_nit_inv_type nm_inv_attribute_set_inv_types.nsit_nit_inv_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NSIT_PK constraint
--
PROCEDURE lock_nsit (pi_nsit_nias_id      nm_inv_attribute_set_inv_types.nsit_nias_id%TYPE
                    ,pi_nsit_nit_inv_type nm_inv_attribute_set_inv_types.nsit_nit_inv_type%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsia">
--
--   Function to lock using NSIA_PK constraint
--
FUNCTION lock_nsia (pi_nsia_nsit_nit_inv_type nm_inv_attribute_set_inv_attr.nsia_nsit_nit_inv_type%TYPE
                   ,pi_nsia_ita_attrib_name   nm_inv_attribute_set_inv_attr.nsia_ita_attrib_name%TYPE
                   ,pi_nsia_nsit_nias_id      nm_inv_attribute_set_inv_attr.nsia_nsit_nias_id%TYPE
                   ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NSIA_PK constraint
--
PROCEDURE lock_nsia (pi_nsia_nsit_nit_inv_type nm_inv_attribute_set_inv_attr.nsia_nsit_nit_inv_type%TYPE
                    ,pi_nsia_ita_attrib_name   nm_inv_attribute_set_inv_attr.nsia_ita_attrib_name%TYPE
                    ,pi_nsia_nsit_nias_id      nm_inv_attribute_set_inv_attr.nsia_nsit_nias_id%TYPE
                    ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nitc">
--
--   Function to lock using NM_INV_TYPE_COLOURS_PK constraint
--
FUNCTION lock_nitc (pi_col_id            nm_inv_type_colours.col_id%TYPE
                   ,pi_ity_inv_code      nm_inv_type_colours.ity_inv_code%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NM_INV_TYPE_COLOURS_PK constraint
--
PROCEDURE lock_nitc (pi_col_id            nm_inv_type_colours.col_id%TYPE
                    ,pi_ity_inv_code      nm_inv_type_colours.ity_inv_code%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_itg">
--
--   Function to lock using ITG_PK constraint
--
FUNCTION lock_itg (pi_itg_inv_type        nm_inv_type_groupings.itg_inv_type%TYPE
                  ,pi_itg_parent_inv_type nm_inv_type_groupings.itg_parent_inv_type%TYPE
                  ,pi_itg_start_date      nm_inv_type_groupings.itg_start_date%TYPE
                  ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITG_PK constraint
--
PROCEDURE lock_itg (pi_itg_inv_type        nm_inv_type_groupings.itg_inv_type%TYPE
                   ,pi_itg_parent_inv_type nm_inv_type_groupings.itg_parent_inv_type%TYPE
                   ,pi_itg_start_date      nm_inv_type_groupings.itg_start_date%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using ITG_PK constraint (without start date for Datetrack View)
--
FUNCTION lock_itg (pi_itg_inv_type        nm_inv_type_groupings.itg_inv_type%TYPE
                  ,pi_itg_parent_inv_type nm_inv_type_groupings.itg_parent_inv_type%TYPE
                  ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITG_PK constraint (without start date for Datetrack View)
--
PROCEDURE lock_itg (pi_itg_inv_type        nm_inv_type_groupings.itg_inv_type%TYPE
                   ,pi_itg_parent_inv_type nm_inv_type_groupings.itg_parent_inv_type%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_itg_all">
--
--   Function to lock using ITG_PK constraint
--
FUNCTION lock_itg_all (pi_itg_inv_type        nm_inv_type_groupings_all.itg_inv_type%TYPE
                      ,pi_itg_parent_inv_type nm_inv_type_groupings_all.itg_parent_inv_type%TYPE
                      ,pi_itg_start_date      nm_inv_type_groupings_all.itg_start_date%TYPE
                      ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using ITG_PK constraint
--
PROCEDURE lock_itg_all (pi_itg_inv_type        nm_inv_type_groupings_all.itg_inv_type%TYPE
                       ,pi_itg_parent_inv_type nm_inv_type_groupings_all.itg_parent_inv_type%TYPE
                       ,pi_itg_start_date      nm_inv_type_groupings_all.itg_start_date%TYPE
                       ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_itr">
--
--   Function to lock using ITR_PK constraint
--
FUNCTION lock_itr (pi_itr_inv_type      nm_inv_type_roles.itr_inv_type%TYPE
                  ,pi_itr_hro_role      nm_inv_type_roles.itr_hro_role%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using ITR_PK constraint
--
PROCEDURE lock_itr (pi_itr_inv_type      nm_inv_type_roles.itr_inv_type%TYPE
                   ,pi_itr_hro_role      nm_inv_type_roles.itr_hro_role%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_njc">
--
--   Function to lock using NJC_PK constraint
--
FUNCTION lock_njc (pi_njc_job_id        nm_job_control.njc_job_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NJC_PK constraint
--
PROCEDURE lock_njc (pi_njc_job_id        nm_job_control.njc_job_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NM_JOB_CONTROL_UK constraint
--
FUNCTION lock_njc (pi_njc_unique        nm_job_control.njc_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_JOB_CONTROL_UK constraint
--
PROCEDURE lock_njc (pi_njc_unique        nm_job_control.njc_unique%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_njo">
--
--   Function to lock using NJO_PK constraint
--
FUNCTION lock_njo (pi_njo_njc_job_id    nm_job_operations.njo_njc_job_id%TYPE
                  ,pi_njo_id            nm_job_operations.njo_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NJO_PK constraint
--
PROCEDURE lock_njo (pi_njo_njc_job_id    nm_job_operations.njo_njc_job_id%TYPE
                   ,pi_njo_id            nm_job_operations.njo_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NJO_UK constraint
--
FUNCTION lock_njo (pi_njo_njc_job_id    nm_job_operations.njo_njc_job_id%TYPE
                  ,pi_njo_seq           nm_job_operations.njo_seq%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NJO_UK constraint
--
PROCEDURE lock_njo (pi_njo_njc_job_id    nm_job_operations.njo_njc_job_id%TYPE
                   ,pi_njo_seq           nm_job_operations.njo_seq%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_njv">
--
--   Function to lock using NJV_PK constraint
--
FUNCTION lock_njv (pi_njv_njc_job_id    nm_job_operation_data_values.njv_njc_job_id%TYPE
                  ,pi_njv_njo_id        nm_job_operation_data_values.njv_njo_id%TYPE
                  ,pi_njv_nod_data_item nm_job_operation_data_values.njv_nod_data_item%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NJV_PK constraint
--
PROCEDURE lock_njv (pi_njv_njc_job_id    nm_job_operation_data_values.njv_njc_job_id%TYPE
                   ,pi_njv_njo_id        nm_job_operation_data_values.njv_njo_id%TYPE
                   ,pi_njv_nod_data_item nm_job_operation_data_values.njv_nod_data_item%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_njt">
--
--   Function to lock using NJT_PK constraint
--
FUNCTION lock_njt (pi_njt_type          nm_job_types.njt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NJT_PK constraint
--
PROCEDURE lock_njt (pi_njt_type          nm_job_types.njt_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_jto">
--
--   Function to lock using JTO_PK constraint
--
FUNCTION lock_jto (pi_jto_nmo_operation nm_job_types_operations.jto_nmo_operation%TYPE
                  ,pi_jto_njt_type      nm_job_types_operations.jto_njt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using JTO_PK constraint
--
PROCEDURE lock_jto (pi_jto_nmo_operation nm_job_types_operations.jto_nmo_operation%TYPE
                   ,pi_jto_njt_type      nm_job_types_operations.jto_njt_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlm">
--
--   Function to lock using NM_LD_MC_ALL_INV_TMP_PK constraint
--
FUNCTION lock_nlm (pi_batch_no          nm_ld_mc_all_inv_tmp.batch_no%TYPE
                  ,pi_record_no         nm_ld_mc_all_inv_tmp.record_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_LD_MC_ALL_INV_TMP_PK constraint
--
PROCEDURE lock_nlm (pi_batch_no          nm_ld_mc_all_inv_tmp.batch_no%TYPE
                   ,pi_record_no         nm_ld_mc_all_inv_tmp.record_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlt">
--
--   Function to lock using NLT_PK constraint
--
FUNCTION lock_nlt (pi_nlt_id            nm_linear_types.nlt_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLT_PK constraint
--
PROCEDURE lock_nlt (pi_nlt_id            nm_linear_types.nlt_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NLT_UK constraint
--
FUNCTION lock_nlt (pi_nlt_nt_type       nm_linear_types.nlt_nt_type%TYPE
                  ,pi_nlt_gty_type      nm_linear_types.nlt_gty_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLT_UK constraint
--
PROCEDURE lock_nlt (pi_nlt_nt_type       nm_linear_types.nlt_nt_type%TYPE
                   ,pi_nlt_gty_type      nm_linear_types.nlt_gty_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlb">
--
--   Function to lock using NLB_PK constraint
--
FUNCTION lock_nlb (pi_nlb_batch_no      nm_load_batches.nlb_batch_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLB_PK constraint
--
PROCEDURE lock_nlb (pi_nlb_batch_no      nm_load_batches.nlb_batch_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlbs">
--
--   Function to lock using NLBS_PK constraint
--
FUNCTION lock_nlbs (pi_nlbs_nlb_batch_no nm_load_batch_status.nlbs_nlb_batch_no%TYPE
                   ,pi_nlbs_record_no    nm_load_batch_status.nlbs_record_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLBS_PK constraint
--
PROCEDURE lock_nlbs (pi_nlbs_nlb_batch_no nm_load_batch_status.nlbs_nlb_batch_no%TYPE
                    ,pi_nlbs_record_no    nm_load_batch_status.nlbs_record_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nld">
--
--   Function to lock using NLD_PK constraint
--
FUNCTION lock_nld (pi_nld_id            nm_load_destinations.nld_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLD_PK constraint
--
PROCEDURE lock_nld (pi_nld_id            nm_load_destinations.nld_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NLD_UK2 constraint
--
FUNCTION lock_nld (pi_nld_table_short_name nm_load_destinations.nld_table_short_name%TYPE
                  ,pi_raise_not_found      BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode    PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode       PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLD_UK2 constraint
--
PROCEDURE lock_nld (pi_nld_table_short_name nm_load_destinations.nld_table_short_name%TYPE
                   ,pi_raise_not_found      BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode    PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode       PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NLD_UK1 constraint
--
FUNCTION lock_nld (pi_nld_table_name    nm_load_destinations.nld_table_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLD_UK1 constraint
--
PROCEDURE lock_nld (pi_nld_table_name    nm_load_destinations.nld_table_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nldd">
--
--   Function to lock using NLDD_PK constraint
--
FUNCTION lock_nldd (pi_nldd_nld_id       nm_load_destination_defaults.nldd_nld_id%TYPE
                   ,pi_nldd_column_name  nm_load_destination_defaults.nldd_column_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLDD_PK constraint
--
PROCEDURE lock_nldd (pi_nldd_nld_id       nm_load_destination_defaults.nldd_nld_id%TYPE
                    ,pi_nldd_column_name  nm_load_destination_defaults.nldd_column_name%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlf">
--
--   Function to lock using NLF_PK constraint
--
FUNCTION lock_nlf (pi_nlf_id            nm_load_files.nlf_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLF_PK constraint
--
PROCEDURE lock_nlf (pi_nlf_id            nm_load_files.nlf_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NLF_UK constraint
--
FUNCTION lock_nlf (pi_nlf_unique        nm_load_files.nlf_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NLF_UK constraint
--
PROCEDURE lock_nlf (pi_nlf_unique        nm_load_files.nlf_unique%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlfc">
--
--   Function to lock using NLFC_PK constraint
--
FUNCTION lock_nlfc (pi_nlfc_nlf_id       nm_load_file_cols.nlfc_nlf_id%TYPE
                   ,pi_nlfc_seq_no       nm_load_file_cols.nlfc_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLFC_PK constraint
--
PROCEDURE lock_nlfc (pi_nlfc_nlf_id       nm_load_file_cols.nlfc_nlf_id%TYPE
                    ,pi_nlfc_seq_no       nm_load_file_cols.nlfc_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NLFC_UK constraint
--
FUNCTION lock_nlfc (pi_nlfc_nlf_id       nm_load_file_cols.nlfc_nlf_id%TYPE
                   ,pi_nlfc_holding_col  nm_load_file_cols.nlfc_holding_col%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLFC_UK constraint
--
PROCEDURE lock_nlfc (pi_nlfc_nlf_id       nm_load_file_cols.nlfc_nlf_id%TYPE
                    ,pi_nlfc_holding_col  nm_load_file_cols.nlfc_holding_col%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlcd">
--
--   Function to lock using NLCD_PK constraint
--
FUNCTION lock_nlcd (pi_nlcd_nlf_id       nm_load_file_col_destinations.nlcd_nlf_id%TYPE
                   ,pi_nlcd_nld_id       nm_load_file_col_destinations.nlcd_nld_id%TYPE
                   ,pi_nlcd_seq_no       nm_load_file_col_destinations.nlcd_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLCD_PK constraint
--
PROCEDURE lock_nlcd (pi_nlcd_nlf_id       nm_load_file_col_destinations.nlcd_nlf_id%TYPE
                    ,pi_nlcd_nld_id       nm_load_file_col_destinations.nlcd_nld_id%TYPE
                    ,pi_nlcd_seq_no       nm_load_file_col_destinations.nlcd_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NLCD_UK constraint
--
FUNCTION lock_nlcd (pi_nlcd_nlf_id       nm_load_file_col_destinations.nlcd_nlf_id%TYPE
                   ,pi_nlcd_nld_id       nm_load_file_col_destinations.nlcd_nld_id%TYPE
                   ,pi_nlcd_dest_col     nm_load_file_col_destinations.nlcd_dest_col%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLCD_UK constraint
--
PROCEDURE lock_nlcd (pi_nlcd_nlf_id       nm_load_file_col_destinations.nlcd_nlf_id%TYPE
                    ,pi_nlcd_nld_id       nm_load_file_col_destinations.nlcd_nld_id%TYPE
                    ,pi_nlcd_dest_col     nm_load_file_col_destinations.nlcd_dest_col%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nlfd">
--
--   Function to lock using NLFD_PK constraint
--
FUNCTION lock_nlfd (pi_nlfd_nlf_id       nm_load_file_destinations.nlfd_nlf_id%TYPE
                   ,pi_nlfd_nld_id       nm_load_file_destinations.nlfd_nld_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLFD_PK constraint
--
PROCEDURE lock_nlfd (pi_nlfd_nlf_id       nm_load_file_destinations.nlfd_nlf_id%TYPE
                    ,pi_nlfd_nld_id       nm_load_file_destinations.nlfd_nld_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
--   Function to lock using NLFD_UK constraint
--
FUNCTION lock_nlfd (pi_nlfd_nlf_id       nm_load_file_destinations.nlfd_nlf_id%TYPE
                   ,pi_nlfd_seq          nm_load_file_destinations.nlfd_seq%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NLFD_UK constraint
--
PROCEDURE lock_nlfd (pi_nlfd_nlf_id       nm_load_file_destinations.nlfd_nlf_id%TYPE
                    ,pi_nlfd_seq          nm_load_file_destinations.nlfd_seq%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmg">
--
--   Function to lock using NMG_PK constraint
--
FUNCTION lock_nmg (pi_nmg_id            nm_mail_groups.nmg_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMG_PK constraint
--
PROCEDURE lock_nmg (pi_nmg_id            nm_mail_groups.nmg_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NMG_UK constraint
--
FUNCTION lock_nmg (pi_nmg_name          nm_mail_groups.nmg_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMG_UK constraint
--
PROCEDURE lock_nmg (pi_nmg_name          nm_mail_groups.nmg_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmgm">
--
--   Function to lock using NMGM_PK constraint
--
FUNCTION lock_nmgm (pi_nmgm_nmg_id       nm_mail_group_membership.nmgm_nmg_id%TYPE
                   ,pi_nmgm_nmu_id       nm_mail_group_membership.nmgm_nmu_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMGM_PK constraint
--
PROCEDURE lock_nmgm (pi_nmgm_nmg_id       nm_mail_group_membership.nmgm_nmg_id%TYPE
                    ,pi_nmgm_nmu_id       nm_mail_group_membership.nmgm_nmu_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmm">
--
--   Function to lock using NMM_PK constraint
--
FUNCTION lock_nmm (pi_nmm_id            nm_mail_message.nmm_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMM_PK constraint
--
PROCEDURE lock_nmm (pi_nmm_id            nm_mail_message.nmm_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmmr">
--
--   Function to lock using NMMR_PK constraint
--
FUNCTION lock_nmmr (pi_nmmr_nmm_id       nm_mail_message_recipients.nmmr_nmm_id%TYPE
                   ,pi_nmmr_rcpt_id      nm_mail_message_recipients.nmmr_rcpt_id%TYPE
                   ,pi_nmmr_rcpt_type    nm_mail_message_recipients.nmmr_rcpt_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMMR_PK constraint
--
PROCEDURE lock_nmmr (pi_nmmr_nmm_id       nm_mail_message_recipients.nmmr_nmm_id%TYPE
                    ,pi_nmmr_rcpt_id      nm_mail_message_recipients.nmmr_rcpt_id%TYPE
                    ,pi_nmmr_rcpt_type    nm_mail_message_recipients.nmmr_rcpt_type%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmmt">
--
--   Function to lock using NMMT_PK constraint
--
FUNCTION lock_nmmt (pi_nmmt_nmm_id       nm_mail_message_text.nmmt_nmm_id%TYPE
                   ,pi_nmmt_line_id      nm_mail_message_text.nmmt_line_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMMT_PK constraint
--
PROCEDURE lock_nmmt (pi_nmmt_nmm_id       nm_mail_message_text.nmmt_nmm_id%TYPE
                    ,pi_nmmt_line_id      nm_mail_message_text.nmmt_line_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmu">
--
--   Function to lock using NMU_PK constraint
--
FUNCTION lock_nmu (pi_nmu_id            nm_mail_users.nmu_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMU_PK constraint
--
PROCEDURE lock_nmu (pi_nmu_id            nm_mail_users.nmu_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nm">
--
--   Function to lock using NM_PK constraint
--
FUNCTION lock_nm (pi_nm_ne_id_in       nm_members.nm_ne_id_in%TYPE
                 ,pi_nm_ne_id_of       nm_members.nm_ne_id_of%TYPE
                 ,pi_nm_begin_mp       nm_members.nm_begin_mp%TYPE
                 ,pi_nm_start_date     nm_members.nm_start_date%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NM_PK constraint
--
PROCEDURE lock_nm (pi_nm_ne_id_in       nm_members.nm_ne_id_in%TYPE
                  ,pi_nm_ne_id_of       nm_members.nm_ne_id_of%TYPE
                  ,pi_nm_begin_mp       nm_members.nm_begin_mp%TYPE
                  ,pi_nm_start_date     nm_members.nm_start_date%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
--   Function to lock using NM_PK constraint (without start date for Datetrack View)
--
FUNCTION lock_nm (pi_nm_ne_id_in       nm_members.nm_ne_id_in%TYPE
                 ,pi_nm_ne_id_of       nm_members.nm_ne_id_of%TYPE
                 ,pi_nm_begin_mp       nm_members.nm_begin_mp%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NM_PK constraint (without start date for Datetrack View)
--
PROCEDURE lock_nm (pi_nm_ne_id_in       nm_members.nm_ne_id_in%TYPE
                  ,pi_nm_ne_id_of       nm_members.nm_ne_id_of%TYPE
                  ,pi_nm_begin_mp       nm_members.nm_begin_mp%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nm_all">
--
--   Function to lock using NM_PK constraint
--
FUNCTION lock_nm_all (pi_nm_ne_id_in       nm_members_all.nm_ne_id_in%TYPE
                     ,pi_nm_ne_id_of       nm_members_all.nm_ne_id_of%TYPE
                     ,pi_nm_begin_mp       nm_members_all.nm_begin_mp%TYPE
                     ,pi_nm_start_date     nm_members_all.nm_start_date%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using NM_PK constraint
--
PROCEDURE lock_nm_all (pi_nm_ne_id_in       nm_members_all.nm_ne_id_in%TYPE
                      ,pi_nm_ne_id_of       nm_members_all.nm_ne_id_of%TYPE
                      ,pi_nm_begin_mp       nm_members_all.nm_begin_mp%TYPE
                      ,pi_nm_start_date     nm_members_all.nm_start_date%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmh">
--
--   Function to lock using NMH_PK constraint
--
FUNCTION lock_nmh (pi_nmh_nm_begin_mp     nm_member_history.nmh_nm_begin_mp%TYPE
                  ,pi_nmh_nm_start_date   nm_member_history.nmh_nm_start_date%TYPE
                  ,pi_nmh_nm_ne_id_in     nm_member_history.nmh_nm_ne_id_in%TYPE
                  ,pi_nmh_nm_ne_id_of_old nm_member_history.nmh_nm_ne_id_of_old%TYPE
                  ,pi_nmh_nm_ne_id_of_new nm_member_history.nmh_nm_ne_id_of_new%TYPE
                  ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMH_PK constraint
--
PROCEDURE lock_nmh (pi_nmh_nm_begin_mp     nm_member_history.nmh_nm_begin_mp%TYPE
                   ,pi_nmh_nm_start_date   nm_member_history.nmh_nm_start_date%TYPE
                   ,pi_nmh_nm_ne_id_in     nm_member_history.nmh_nm_ne_id_in%TYPE
                   ,pi_nmh_nm_ne_id_of_old nm_member_history.nmh_nm_ne_id_of_old%TYPE
                   ,pi_nmh_nm_ne_id_of_new nm_member_history.nmh_nm_ne_id_of_new%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nda">
--
--   Function to lock using NDQA_PK constraint
--
FUNCTION lock_nda (pi_nda_seq_no        nm_mrg_default_query_attribs.nda_seq_no%TYPE
                  ,pi_nda_attrib_name   nm_mrg_default_query_attribs.nda_attrib_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NDQA_PK constraint
--
PROCEDURE lock_nda (pi_nda_seq_no        nm_mrg_default_query_attribs.nda_seq_no%TYPE
                   ,pi_nda_attrib_name   nm_mrg_default_query_attribs.nda_attrib_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ndq">
--
--   Function to lock using NDQT_PK constraint
--
FUNCTION lock_ndq (pi_ndq_seq_no        nm_mrg_default_query_types.ndq_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NDQT_PK constraint
--
PROCEDURE lock_ndq (pi_ndq_seq_no        nm_mrg_default_query_types.ndq_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ndq_all">
--
--   Function to lock using NDQT_PK constraint
--
FUNCTION lock_ndq_all (pi_ndq_seq_no        nm_mrg_default_query_types_all.ndq_seq_no%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NDQT_PK constraint
--
PROCEDURE lock_ndq_all (pi_ndq_seq_no        nm_mrg_default_query_types_all.ndq_seq_no%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmid">
--
--   Function to lock using NMID_PK constraint
--
FUNCTION lock_nmid (pi_nmid_nmq_id       nm_mrg_inv_derivation.nmid_nmq_id%TYPE
                   ,pi_nmid_inv_type     nm_mrg_inv_derivation.nmid_inv_type%TYPE
                   ,pi_nmid_attrib_name  nm_mrg_inv_derivation.nmid_attrib_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMID_PK constraint
--
PROCEDURE lock_nmid (pi_nmid_nmq_id       nm_mrg_inv_derivation.nmid_nmq_id%TYPE
                    ,pi_nmid_inv_type     nm_mrg_inv_derivation.nmid_inv_type%TYPE
                    ,pi_nmid_attrib_name  nm_mrg_inv_derivation.nmid_attrib_name%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmc">
--
--   Function to lock using NMC_PK constraint
--
FUNCTION lock_nmc (pi_nmc_nmf_id        nm_mrg_output_cols.nmc_nmf_id%TYPE
                  ,pi_nmc_seq_no        nm_mrg_output_cols.nmc_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMC_PK constraint
--
PROCEDURE lock_nmc (pi_nmc_nmf_id        nm_mrg_output_cols.nmc_nmf_id%TYPE
                   ,pi_nmc_seq_no        nm_mrg_output_cols.nmc_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NMC_UK constraint
--
FUNCTION lock_nmc (pi_nmc_nmf_id        nm_mrg_output_cols.nmc_nmf_id%TYPE
                  ,pi_nmc_view_col_name nm_mrg_output_cols.nmc_view_col_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMC_UK constraint
--
PROCEDURE lock_nmc (pi_nmc_nmf_id        nm_mrg_output_cols.nmc_nmf_id%TYPE
                   ,pi_nmc_view_col_name nm_mrg_output_cols.nmc_view_col_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmcd">
--
--   Function to lock using NMCD_PK constraint
--
FUNCTION lock_nmcd (pi_nmcd_nmf_id       nm_mrg_output_col_decode.nmcd_nmf_id%TYPE
                   ,pi_nmcd_nmc_seq_no   nm_mrg_output_col_decode.nmcd_nmc_seq_no%TYPE
                   ,pi_nmcd_from_value   nm_mrg_output_col_decode.nmcd_from_value%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMCD_PK constraint
--
PROCEDURE lock_nmcd (pi_nmcd_nmf_id       nm_mrg_output_col_decode.nmcd_nmf_id%TYPE
                    ,pi_nmcd_nmc_seq_no   nm_mrg_output_col_decode.nmcd_nmc_seq_no%TYPE
                    ,pi_nmcd_from_value   nm_mrg_output_col_decode.nmcd_from_value%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmf">
--
--   Function to lock using NMF_PK constraint
--
FUNCTION lock_nmf (pi_nmf_id            nm_mrg_output_file.nmf_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMF_PK constraint
--
PROCEDURE lock_nmf (pi_nmf_id            nm_mrg_output_file.nmf_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NMF_UK constraint
--
FUNCTION lock_nmf (pi_nmf_nmq_id        nm_mrg_output_file.nmf_nmq_id%TYPE
                  ,pi_nmf_filename      nm_mrg_output_file.nmf_filename%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMF_UK constraint
--
PROCEDURE lock_nmf (pi_nmf_nmq_id        nm_mrg_output_file.nmf_nmq_id%TYPE
                   ,pi_nmf_filename      nm_mrg_output_file.nmf_filename%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmq">
--
--   Function to lock using NMQ_PK constraint
--
FUNCTION lock_nmq (pi_nmq_id            nm_mrg_query.nmq_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMQ_PK constraint
--
PROCEDURE lock_nmq (pi_nmq_id            nm_mrg_query.nmq_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NMQ_UK constraint
--
FUNCTION lock_nmq (pi_nmq_unique        nm_mrg_query.nmq_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMQ_UK constraint
--
PROCEDURE lock_nmq (pi_nmq_unique        nm_mrg_query.nmq_unique%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmq_all">
--
--   Function to lock using NMQ_PK constraint
--
FUNCTION lock_nmq_all (pi_nmq_id            nm_mrg_query_all.nmq_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NMQ_PK constraint
--
PROCEDURE lock_nmq_all (pi_nmq_id            nm_mrg_query_all.nmq_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--
--   Function to lock using NMQ_UK constraint
--
FUNCTION lock_nmq_all (pi_nmq_unique        nm_mrg_query_all.nmq_unique%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NMQ_UK constraint
--
PROCEDURE lock_nmq_all (pi_nmq_unique        nm_mrg_query_all.nmq_unique%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqa">
--
--   Function to lock using NMQA_PK constraint
--
FUNCTION lock_nmqa (pi_nqa_nmq_id        nm_mrg_query_attribs.nqa_nmq_id%TYPE
                   ,pi_nqa_nqt_seq_no    nm_mrg_query_attribs.nqa_nqt_seq_no%TYPE
                   ,pi_nqa_attrib_name   nm_mrg_query_attribs.nqa_attrib_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMQA_PK constraint
--
PROCEDURE lock_nmqa (pi_nqa_nmq_id        nm_mrg_query_attribs.nqa_nmq_id%TYPE
                    ,pi_nqa_nqt_seq_no    nm_mrg_query_attribs.nqa_nqt_seq_no%TYPE
                    ,pi_nqa_attrib_name   nm_mrg_query_attribs.nqa_attrib_name%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqr">
--
--   Function to lock using NMQR_PK constraint
--
FUNCTION lock_nmqr (pi_nqr_mrg_job_id    nm_mrg_query_results.nqr_mrg_job_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMQR_PK constraint
--
PROCEDURE lock_nmqr (pi_nqr_mrg_job_id    nm_mrg_query_results.nqr_mrg_job_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqr_all">
--
--   Function to lock using NMQR_PK constraint
--
FUNCTION lock_nmqr_all (pi_nqr_mrg_job_id    nm_mrg_query_results_all.nqr_mrg_job_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       ) RETURN ROWID;
--
--   Procedure to lock using NMQR_PK constraint
--
PROCEDURE lock_nmqr_all (pi_nqr_mrg_job_id    nm_mrg_query_results_all.nqr_mrg_job_id%TYPE
                        ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                        ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                        ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                        );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nqro">
--
--   Function to lock using NQRO_PK constraint
--
FUNCTION lock_nqro (pi_nqro_nmq_id       nm_mrg_query_roles.nqro_nmq_id%TYPE
                   ,pi_nqro_role         nm_mrg_query_roles.nqro_role%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NQRO_PK constraint
--
PROCEDURE lock_nqro (pi_nqro_nmq_id       nm_mrg_query_roles.nqro_nmq_id%TYPE
                    ,pi_nqro_role         nm_mrg_query_roles.nqro_role%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqt">
--
--   Function to lock using NMQT_PK constraint
--
FUNCTION lock_nmqt (pi_nqt_nmq_id        nm_mrg_query_types.nqt_nmq_id%TYPE
                   ,pi_nqt_seq_no        nm_mrg_query_types.nqt_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMQT_PK constraint
--
PROCEDURE lock_nmqt (pi_nqt_nmq_id        nm_mrg_query_types.nqt_nmq_id%TYPE
                    ,pi_nqt_seq_no        nm_mrg_query_types.nqt_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqt_all">
--
--   Function to lock using NMQT_PK constraint
--
FUNCTION lock_nmqt_all (pi_nqt_nmq_id        nm_mrg_query_types_all.nqt_nmq_id%TYPE
                       ,pi_nqt_seq_no        nm_mrg_query_types_all.nqt_seq_no%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       ) RETURN ROWID;
--
--   Procedure to lock using NMQT_PK constraint
--
PROCEDURE lock_nmqt_all (pi_nqt_nmq_id        nm_mrg_query_types_all.nqt_nmq_id%TYPE
                        ,pi_nqt_seq_no        nm_mrg_query_types_all.nqt_seq_no%TYPE
                        ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                        ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                        ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                        );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmqv">
--
--   Function to lock using NMQV_PK constraint
--
FUNCTION lock_nmqv (pi_nqv_nqt_seq_no    nm_mrg_query_values.nqv_nqt_seq_no%TYPE
                   ,pi_nqv_attrib_name   nm_mrg_query_values.nqv_attrib_name%TYPE
                   ,pi_nqv_sequence      nm_mrg_query_values.nqv_sequence%TYPE
                   ,pi_nqv_nmq_id        nm_mrg_query_values.nqv_nmq_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMQV_PK constraint
--
PROCEDURE lock_nmqv (pi_nqv_nqt_seq_no    nm_mrg_query_values.nqv_nqt_seq_no%TYPE
                    ,pi_nqv_attrib_name   nm_mrg_query_values.nqv_attrib_name%TYPE
                    ,pi_nqv_sequence      nm_mrg_query_values.nqv_sequence%TYPE
                    ,pi_nqv_nmq_id        nm_mrg_query_values.nqv_nmq_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nms">
--
--   Function to lock using NMS_PK constraint
--
FUNCTION lock_nms (pi_nms_mrg_job_id     nm_mrg_sections.nms_mrg_job_id%TYPE
                  ,pi_nms_mrg_section_id nm_mrg_sections.nms_mrg_section_id%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMS_PK constraint
--
PROCEDURE lock_nms (pi_nms_mrg_job_id     nm_mrg_sections.nms_mrg_job_id%TYPE
                   ,pi_nms_mrg_section_id nm_mrg_sections.nms_mrg_section_id%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nms_all">
--
--   Function to lock using NMS_PK constraint
--
FUNCTION lock_nms_all (pi_nms_mrg_job_id     nm_mrg_sections_all.nms_mrg_job_id%TYPE
                      ,pi_nms_mrg_section_id nm_mrg_sections_all.nms_mrg_section_id%TYPE
                      ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NMS_PK constraint
--
PROCEDURE lock_nms_all (pi_nms_mrg_job_id     nm_mrg_sections_all.nms_mrg_job_id%TYPE
                       ,pi_nms_mrg_section_id nm_mrg_sections_all.nms_mrg_section_id%TYPE
                       ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsv">
--
--   Function to lock using NMSIV_PK constraint
--
FUNCTION lock_nsv (pi_nsv_mrg_job_id    nm_mrg_section_inv_values.nsv_mrg_job_id%TYPE
                  ,pi_nsv_value_id      nm_mrg_section_inv_values.nsv_value_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMSIV_PK constraint
--
PROCEDURE lock_nsv (pi_nsv_mrg_job_id    nm_mrg_section_inv_values.nsv_mrg_job_id%TYPE
                   ,pi_nsv_value_id      nm_mrg_section_inv_values.nsv_value_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsv_all">
--
--   Function to lock using NMSIV_PK constraint
--
FUNCTION lock_nsv_all (pi_nsv_mrg_job_id    nm_mrg_section_inv_values_all.nsv_mrg_job_id%TYPE
                      ,pi_nsv_value_id      nm_mrg_section_inv_values_all.nsv_value_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NMSIV_PK constraint
--
PROCEDURE lock_nsv_all (pi_nsv_mrg_job_id    nm_mrg_section_inv_values_all.nsv_mrg_job_id%TYPE
                       ,pi_nsv_value_id      nm_mrg_section_inv_values_all.nsv_value_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmsm">
--
--   Function to lock using NMSM_PK constraint
--
FUNCTION lock_nmsm (pi_nsm_mrg_job_id     nm_mrg_section_members.nsm_mrg_job_id%TYPE
                   ,pi_nsm_mrg_section_id nm_mrg_section_members.nsm_mrg_section_id%TYPE
                   ,pi_nsm_ne_id          nm_mrg_section_members.nsm_ne_id%TYPE
                   ,pi_nsm_begin_mp       nm_mrg_section_members.nsm_begin_mp%TYPE
                   ,pi_nsm_end_mp         nm_mrg_section_members.nsm_end_mp%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NMSM_PK constraint
--
PROCEDURE lock_nmsm (pi_nsm_mrg_job_id     nm_mrg_section_members.nsm_mrg_job_id%TYPE
                    ,pi_nsm_mrg_section_id nm_mrg_section_members.nsm_mrg_section_id%TYPE
                    ,pi_nsm_ne_id          nm_mrg_section_members.nsm_ne_id%TYPE
                    ,pi_nsm_begin_mp       nm_mrg_section_members.nsm_begin_mp%TYPE
                    ,pi_nsm_end_mp         nm_mrg_section_members.nsm_end_mp%TYPE
                    ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_no">
--
--   Function to lock using NN_PK constraint
--
FUNCTION lock_no (pi_no_node_id        nm_nodes.no_node_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NN_PK constraint
--
PROCEDURE lock_no (pi_no_node_id        nm_nodes.no_node_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
--   Function to lock using NN_UK constraint
--
FUNCTION lock_no (pi_no_node_name      nm_nodes.no_node_name%TYPE
                 ,pi_no_node_type      nm_nodes.no_node_type%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NN_UK constraint
--
PROCEDURE lock_no (pi_no_node_name      nm_nodes.no_node_name%TYPE
                  ,pi_no_node_type      nm_nodes.no_node_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_no_all">
--
--   Function to lock using NN_PK constraint
--
FUNCTION lock_no_all (pi_no_node_id        nm_nodes_all.no_node_id%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using NN_PK constraint
--
PROCEDURE lock_no_all (pi_no_node_id        nm_nodes_all.no_node_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--
--   Function to lock using NN_UK constraint
--
FUNCTION lock_no_all (pi_no_node_name      nm_nodes_all.no_node_name%TYPE
                     ,pi_no_node_type      nm_nodes_all.no_node_type%TYPE
                     ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                     ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                     ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                     ) RETURN ROWID;
--
--   Procedure to lock using NN_UK constraint
--
PROCEDURE lock_no_all (pi_no_node_name      nm_nodes_all.no_node_name%TYPE
                      ,pi_no_node_type      nm_nodes_all.no_node_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nnt">
--
--   Function to lock using NNT_PK constraint
--
FUNCTION lock_nnt (pi_nnt_type          nm_node_types.nnt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NNT_PK constraint
--
PROCEDURE lock_nnt (pi_nnt_type          nm_node_types.nnt_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nnu">
--
--   Function to lock using NNU_PK constraint
--
FUNCTION lock_nnu (pi_nnu_ne_id         nm_node_usages.nnu_ne_id%TYPE
                  ,pi_nnu_chain         nm_node_usages.nnu_chain%TYPE
                  ,pi_nnu_no_node_id    nm_node_usages.nnu_no_node_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NNU_PK constraint
--
PROCEDURE lock_nnu (pi_nnu_ne_id         nm_node_usages.nnu_ne_id%TYPE
                   ,pi_nnu_chain         nm_node_usages.nnu_chain%TYPE
                   ,pi_nnu_no_node_id    nm_node_usages.nnu_no_node_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nnu_all">
--
--   Function to lock using NNU_PK constraint
--
FUNCTION lock_nnu_all (pi_nnu_ne_id         nm_node_usages_all.nnu_ne_id%TYPE
                      ,pi_nnu_chain         nm_node_usages_all.nnu_chain%TYPE
                      ,pi_nnu_no_node_id    nm_node_usages_all.nnu_no_node_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NNU_PK constraint
--
PROCEDURE lock_nnu_all (pi_nnu_ne_id         nm_node_usages_all.nnu_ne_id%TYPE
                       ,pi_nnu_chain         nm_node_usages_all.nnu_chain%TYPE
                       ,pi_nnu_no_node_id    nm_node_usages_all.nnu_no_node_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nng">
--
--   Function to lock using NNG_PK constraint
--
FUNCTION lock_nng (pi_nng_group_type    nm_nt_groupings.nng_group_type%TYPE
                  ,pi_nng_nt_type       nm_nt_groupings.nng_nt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NNG_PK constraint
--
PROCEDURE lock_nng (pi_nng_group_type    nm_nt_groupings.nng_group_type%TYPE
                   ,pi_nng_nt_type       nm_nt_groupings.nng_nt_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nng_all">
--
--   Function to lock using NNG_PK constraint
--
FUNCTION lock_nng_all (pi_nng_group_type    nm_nt_groupings_all.nng_group_type%TYPE
                      ,pi_nng_nt_type       nm_nt_groupings_all.nng_nt_type%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NNG_PK constraint
--
PROCEDURE lock_nng_all (pi_nng_group_type    nm_nt_groupings_all.nng_group_type%TYPE
                       ,pi_nng_nt_type       nm_nt_groupings_all.nng_nt_type%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nad">
--
--   Function to lock using NAD_ID_PK constraint
--
FUNCTION lock_nad (pi_nad_id            nm_nw_ad_types.nad_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NAD_ID_PK constraint
--
PROCEDURE lock_nad (pi_nad_id            nm_nw_ad_types.nad_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npe">
--
--   Function to lock using NPE_PK constraint
--
FUNCTION lock_npe (pi_npe_job_id        nm_nw_persistent_extents.npe_job_id%TYPE
                  ,pi_npe_ne_id_of      nm_nw_persistent_extents.npe_ne_id_of%TYPE
                  ,pi_npe_begin_mp      nm_nw_persistent_extents.npe_begin_mp%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NPE_PK constraint
--
PROCEDURE lock_npe (pi_npe_job_id        nm_nw_persistent_extents.npe_job_id%TYPE
                   ,pi_npe_ne_id_of      nm_nw_persistent_extents.npe_ne_id_of%TYPE
                   ,pi_npe_begin_mp      nm_nw_persistent_extents.npe_begin_mp%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nnth">
--
--   Function to lock using NNTH_PK constraint
--
FUNCTION lock_nnth (pi_nnth_nlt_id       nm_nw_themes.nnth_nlt_id%TYPE
                   ,pi_nnth_nth_theme_id nm_nw_themes.nnth_nth_theme_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NNTH_PK constraint
--
PROCEDURE lock_nnth (pi_nnth_nlt_id       nm_nw_themes.nnth_nlt_id%TYPE
                    ,pi_nnth_nth_theme_id nm_nw_themes.nnth_nth_theme_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nmo">
--
--   Function to lock using NMO_PK constraint
--
FUNCTION lock_nmo (pi_nmo_operation     nm_operations.nmo_operation%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NMO_PK constraint
--
PROCEDURE lock_nmo (pi_nmo_operation     nm_operations.nmo_operation%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nod">
--
--   Function to lock using NOD_PK constraint
--
FUNCTION lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                  ,pi_nod_data_item     nm_operation_data.nod_data_item%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NOD_PK constraint
--
PROCEDURE lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                   ,pi_nod_data_item     nm_operation_data.nod_data_item%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NOD_UK constraint
--
FUNCTION lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                  ,pi_nod_seq           nm_operation_data.nod_seq%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NOD_UK constraint
--
PROCEDURE lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                   ,pi_nod_seq           nm_operation_data.nod_seq%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NOD_SCRN_TEXT_UK constraint
--
FUNCTION lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                  ,pi_nod_scrn_text     nm_operation_data.nod_scrn_text%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NOD_SCRN_TEXT_UK constraint
--
PROCEDURE lock_nod (pi_nod_nmo_operation nm_operation_data.nod_nmo_operation%TYPE
                   ,pi_nod_scrn_text     nm_operation_data.nod_scrn_text%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npq">
--
--   Function to lock using NPQ_PK constraint
--
FUNCTION lock_npq (pi_npq_id            nm_pbi_query.npq_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NPQ_PK constraint
--
PROCEDURE lock_npq (pi_npq_id            nm_pbi_query.npq_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NPQ_UK constraint
--
FUNCTION lock_npq (pi_npq_unique        nm_pbi_query.npq_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NPQ_UK constraint
--
PROCEDURE lock_npq (pi_npq_unique        nm_pbi_query.npq_unique%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npqa">
--
--   Function to lock using NQA_PK constraint
--
FUNCTION lock_npqa (pi_nqa_npq_id        nm_pbi_query_attribs.nqa_npq_id%TYPE
                   ,pi_nqa_nqt_seq_no    nm_pbi_query_attribs.nqa_nqt_seq_no%TYPE
                   ,pi_nqa_seq_no        nm_pbi_query_attribs.nqa_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NQA_PK constraint
--
PROCEDURE lock_npqa (pi_nqa_npq_id        nm_pbi_query_attribs.nqa_npq_id%TYPE
                    ,pi_nqa_nqt_seq_no    nm_pbi_query_attribs.nqa_nqt_seq_no%TYPE
                    ,pi_nqa_seq_no        nm_pbi_query_attribs.nqa_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npqr">
--
--   Function to lock using NQR_PK constraint
--
FUNCTION lock_npqr (pi_nqr_npq_id        nm_pbi_query_results.nqr_npq_id%TYPE
                   ,pi_nqr_job_id        nm_pbi_query_results.nqr_job_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NQR_PK constraint
--
PROCEDURE lock_npqr (pi_nqr_npq_id        nm_pbi_query_results.nqr_npq_id%TYPE
                    ,pi_nqr_job_id        nm_pbi_query_results.nqr_job_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npqt">
--
--   Function to lock using NQT_PK constraint
--
FUNCTION lock_npqt (pi_nqt_npq_id        nm_pbi_query_types.nqt_npq_id%TYPE
                   ,pi_nqt_seq_no        nm_pbi_query_types.nqt_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NQT_PK constraint
--
PROCEDURE lock_npqt (pi_nqt_npq_id        nm_pbi_query_types.nqt_npq_id%TYPE
                    ,pi_nqt_seq_no        nm_pbi_query_types.nqt_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npqv">
--
--   Function to lock using NQV_PK constraint
--
FUNCTION lock_npqv (pi_nqv_sequence      nm_pbi_query_values.nqv_sequence%TYPE
                   ,pi_nqv_npq_id        nm_pbi_query_values.nqv_npq_id%TYPE
                   ,pi_nqv_nqt_seq_no    nm_pbi_query_values.nqv_nqt_seq_no%TYPE
                   ,pi_nqv_nqa_seq_no    nm_pbi_query_values.nqv_nqa_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NQV_PK constraint
--
PROCEDURE lock_npqv (pi_nqv_sequence      nm_pbi_query_values.nqv_sequence%TYPE
                    ,pi_nqv_npq_id        nm_pbi_query_values.nqv_npq_id%TYPE
                    ,pi_nqv_nqt_seq_no    nm_pbi_query_values.nqv_nqt_seq_no%TYPE
                    ,pi_nqv_nqa_seq_no    nm_pbi_query_values.nqv_nqa_seq_no%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nps">
--
--   Function to lock using NPS_PK constraint
--
FUNCTION lock_nps (pi_nps_npq_id        nm_pbi_sections.nps_npq_id%TYPE
                  ,pi_nps_nqr_job_id    nm_pbi_sections.nps_nqr_job_id%TYPE
                  ,pi_nps_section_id    nm_pbi_sections.nps_section_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NPS_PK constraint
--
PROCEDURE lock_nps (pi_nps_npq_id        nm_pbi_sections.nps_npq_id%TYPE
                   ,pi_nps_nqr_job_id    nm_pbi_sections.nps_nqr_job_id%TYPE
                   ,pi_nps_section_id    nm_pbi_sections.nps_section_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_npsm">
--
--   Function to lock using NPM_PK constraint
--
FUNCTION lock_npsm (pi_npm_npq_id         nm_pbi_section_members.npm_npq_id%TYPE
                   ,pi_npm_nqr_job_id     nm_pbi_section_members.npm_nqr_job_id%TYPE
                   ,pi_npm_nps_section_id nm_pbi_section_members.npm_nps_section_id%TYPE
                   ,pi_npm_ne_id_of       nm_pbi_section_members.npm_ne_id_of%TYPE
                   ,pi_npm_begin_mp       nm_pbi_section_members.npm_begin_mp%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NPM_PK constraint
--
PROCEDURE lock_npsm (pi_npm_npq_id         nm_pbi_section_members.npm_npq_id%TYPE
                    ,pi_npm_nqr_job_id     nm_pbi_section_members.npm_nqr_job_id%TYPE
                    ,pi_npm_nps_section_id nm_pbi_section_members.npm_nps_section_id%TYPE
                    ,pi_npm_ne_id_of       nm_pbi_section_members.npm_ne_id_of%TYPE
                    ,pi_npm_begin_mp       nm_pbi_section_members.npm_begin_mp%TYPE
                    ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_np">
--
--   Function to lock using NP_PK constraint
--
FUNCTION lock_np (pi_np_id             nm_points.np_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NP_PK constraint
--
PROCEDURE lock_np (pi_np_id             nm_points.np_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nrd">
--
--   Function to lock using NRD_PK constraint
--
FUNCTION lock_nrd (pi_nrd_job_id        nm_reclass_details.nrd_job_id%TYPE
                  ,pi_nrd_old_ne_id     nm_reclass_details.nrd_old_ne_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NRD_PK constraint
--
PROCEDURE lock_nrd (pi_nrd_job_id        nm_reclass_details.nrd_job_id%TYPE
                   ,pi_nrd_old_ne_id     nm_reclass_details.nrd_old_ne_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NRD_UK constraint
--
FUNCTION lock_nrd (pi_nrd_job_id        nm_reclass_details.nrd_job_id%TYPE
                  ,pi_nrd_new_ne_id     nm_reclass_details.nrd_new_ne_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NRD_UK constraint
--
PROCEDURE lock_nrd (pi_nrd_job_id        nm_reclass_details.nrd_job_id%TYPE
                   ,pi_nrd_new_ne_id     nm_reclass_details.nrd_new_ne_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nse">
--
--   Function to lock using NSE_PK constraint
--
FUNCTION lock_nse (pi_nse_id            nm_saved_extents.nse_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSE_PK constraint
--
PROCEDURE lock_nse (pi_nse_id            nm_saved_extents.nse_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NSE_UK constraint
--
FUNCTION lock_nse (pi_nse_name          nm_saved_extents.nse_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSE_UK constraint
--
PROCEDURE lock_nse (pi_nse_name          nm_saved_extents.nse_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsm">
--
--   Function to lock using NSM_PK constraint
--
FUNCTION lock_nsm (pi_nsm_nse_id        nm_saved_extent_members.nsm_nse_id%TYPE
                  ,pi_nsm_id            nm_saved_extent_members.nsm_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSM_PK constraint
--
PROCEDURE lock_nsm (pi_nsm_nse_id        nm_saved_extent_members.nsm_nse_id%TYPE
                   ,pi_nsm_id            nm_saved_extent_members.nsm_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsd">
--
--   Function to lock using NSD_PK constraint
--
FUNCTION lock_nsd (pi_nsd_ne_id         nm_saved_extent_member_datums.nsd_ne_id%TYPE
                  ,pi_nsd_begin_mp      nm_saved_extent_member_datums.nsd_begin_mp%TYPE
                  ,pi_nsd_nse_id        nm_saved_extent_member_datums.nsd_nse_id%TYPE
                  ,pi_nsd_nsm_id        nm_saved_extent_member_datums.nsd_nsm_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSD_PK constraint
--
PROCEDURE lock_nsd (pi_nsd_ne_id         nm_saved_extent_member_datums.nsd_ne_id%TYPE
                   ,pi_nsd_begin_mp      nm_saved_extent_member_datums.nsd_begin_mp%TYPE
                   ,pi_nsd_nse_id        nm_saved_extent_member_datums.nsd_nse_id%TYPE
                   ,pi_nsd_nsm_id        nm_saved_extent_member_datums.nsd_nsm_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_tii">
--
--   Function to lock using TII_PK constraint
--
FUNCTION lock_tii (pi_tii_njc_job_id    nm_temp_inv_items.tii_njc_job_id%TYPE
                  ,pi_tii_ne_id         nm_temp_inv_items.tii_ne_id%TYPE
                  ,pi_tii_ne_id_new     nm_temp_inv_items.tii_ne_id_new%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using TII_PK constraint
--
PROCEDURE lock_tii (pi_tii_njc_job_id    nm_temp_inv_items.tii_njc_job_id%TYPE
                   ,pi_tii_ne_id         nm_temp_inv_items.tii_ne_id%TYPE
                   ,pi_tii_ne_id_new     nm_temp_inv_items.tii_ne_id_new%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_tim">
--
--   Function to lock using TIM_PK constraint
--
FUNCTION lock_tim (pi_tim_njc_job_id      nm_temp_inv_members.tim_njc_job_id%TYPE
                  ,pi_tim_ne_id_in        nm_temp_inv_members.tim_ne_id_in%TYPE
                  ,pi_tim_ne_id_in_new    nm_temp_inv_members.tim_ne_id_in_new%TYPE
                  ,pi_tim_ne_id_of        nm_temp_inv_members.tim_ne_id_of%TYPE
                  ,pi_tim_extent_begin_mp nm_temp_inv_members.tim_extent_begin_mp%TYPE
                  ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using TIM_PK constraint
--
PROCEDURE lock_tim (pi_tim_njc_job_id      nm_temp_inv_members.tim_njc_job_id%TYPE
                   ,pi_tim_ne_id_in        nm_temp_inv_members.tim_ne_id_in%TYPE
                   ,pi_tim_ne_id_in_new    nm_temp_inv_members.tim_ne_id_in_new%TYPE
                   ,pi_tim_ne_id_of        nm_temp_inv_members.tim_ne_id_of%TYPE
                   ,pi_tim_extent_begin_mp nm_temp_inv_members.tim_extent_begin_mp%TYPE
                   ,pi_raise_not_found     BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode   PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode      PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nth">
--
--   Function to lock using NTH_PK constraint
--
FUNCTION lock_nth (pi_nth_theme_id      nm_themes_all.nth_theme_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTH_PK constraint
--
PROCEDURE lock_nth (pi_nth_theme_id      nm_themes_all.nth_theme_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NTH_UK constraint
--
FUNCTION lock_nth (pi_nth_theme_name    nm_themes_all.nth_theme_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTH_UK constraint
--
PROCEDURE lock_nth (pi_nth_theme_name    nm_themes_all.nth_theme_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ntg">
--
--   Function to lock using NTG_UK constraint
--
FUNCTION lock_ntg (pi_ntg_theme_id      nm_theme_gtypes.ntg_theme_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTG_UK constraint
--
PROCEDURE lock_ntg (pi_ntg_theme_id      nm_theme_gtypes.ntg_theme_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ntf">
--
--   Function to lock using NTF_PK constraint
--
FUNCTION lock_ntf (pi_ntf_nth_theme_id  nm_theme_functions_all.ntf_nth_theme_id%TYPE
                  ,pi_ntf_hmo_module    nm_theme_functions_all.ntf_hmo_module%TYPE
                  ,pi_ntf_parameter     nm_theme_functions_all.ntf_parameter%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTF_PK constraint
--
PROCEDURE lock_ntf (pi_ntf_nth_theme_id  nm_theme_functions_all.ntf_nth_theme_id%TYPE
                   ,pi_ntf_hmo_module    nm_theme_functions_all.ntf_hmo_module%TYPE
                   ,pi_ntf_parameter     nm_theme_functions_all.ntf_parameter%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nthr">
--
--   Function to lock using NTHR_PK constraint
--
FUNCTION lock_nthr (pi_nthr_role         nm_theme_roles.nthr_role%TYPE
                   ,pi_nthr_theme_id     nm_theme_roles.nthr_theme_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NTHR_PK constraint
--
PROCEDURE lock_nthr (pi_nthr_role         nm_theme_roles.nthr_role%TYPE
                    ,pi_nthr_theme_id     nm_theme_roles.nthr_theme_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nts">
--
--   Function to lock using NTS_PK constraint
--
FUNCTION lock_nts (pi_nts_theme_id      nm_theme_snaps.nts_theme_id%TYPE
                  ,pi_nts_snap_to       nm_theme_snaps.nts_snap_to%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTS_PK constraint
--
PROCEDURE lock_nts (pi_nts_theme_id      nm_theme_snaps.nts_theme_id%TYPE
                   ,pi_nts_snap_to       nm_theme_snaps.nts_snap_to%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nt">
--
--   Function to lock using NT_PK constraint
--
FUNCTION lock_nt (pi_nt_type           nm_types.nt_type%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NT_PK constraint
--
PROCEDURE lock_nt (pi_nt_type           nm_types.nt_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--
--   Function to lock using NT_UK constraint
--
FUNCTION lock_nt (pi_nt_unique         nm_types.nt_unique%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using NT_UK constraint
--
PROCEDURE lock_nt (pi_nt_unique         nm_types.nt_unique%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ntc">
--
--   Function to lock using NTC_PK constraint
--
FUNCTION lock_ntc (pi_ntc_nt_type       nm_type_columns.ntc_nt_type%TYPE
                  ,pi_ntc_column_name   nm_type_columns.ntc_column_name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTC_PK constraint
--
PROCEDURE lock_ntc (pi_ntc_nt_type       nm_type_columns.ntc_nt_type%TYPE
                   ,pi_ntc_column_name   nm_type_columns.ntc_column_name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nti">
--
--   Function to lock using NTI_PK constraint
--
FUNCTION lock_nti (pi_nti_nw_parent_type nm_type_inclusion.nti_nw_parent_type%TYPE
                  ,pi_nti_nw_child_type  nm_type_inclusion.nti_nw_child_type%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTI_PK constraint
--
PROCEDURE lock_nti (pi_nti_nw_parent_type nm_type_inclusion.nti_nw_parent_type%TYPE
                   ,pi_nti_nw_child_type  nm_type_inclusion.nti_nw_child_type%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NTI_UK constraint
--
FUNCTION lock_nti (pi_nti_nw_child_type nm_type_inclusion.nti_nw_child_type%TYPE
                  ,pi_nti_child_column  nm_type_inclusion.nti_child_column%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTI_UK constraint
--
PROCEDURE lock_nti (pi_nti_nw_child_type nm_type_inclusion.nti_nw_child_type%TYPE
                   ,pi_nti_child_column  nm_type_inclusion.nti_child_column%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NTI_PARENT_TYPE_UK constraint
--
FUNCTION lock_nti (pi_nti_nw_parent_type nm_type_inclusion.nti_nw_parent_type%TYPE
                  ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTI_PARENT_TYPE_UK constraint
--
PROCEDURE lock_nti (pi_nti_nw_parent_type nm_type_inclusion.nti_nw_parent_type%TYPE
                   ,pi_raise_not_found    BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode  PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode     PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ntl">
--
--   Function to lock using NTL_PK constraint
--
FUNCTION lock_ntl (pi_ntl_nt_type       nm_type_layers.ntl_nt_type%TYPE
                  ,pi_ntl_layer_id      nm_type_layers.ntl_layer_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NTL_PK constraint
--
PROCEDURE lock_ntl (pi_ntl_nt_type       nm_type_layers.ntl_nt_type%TYPE
                   ,pi_ntl_layer_id      nm_type_layers.ntl_layer_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ntl_all">
--
--   Function to lock using NTL_PK constraint
--
FUNCTION lock_ntl_all (pi_ntl_nt_type       nm_type_layers_all.ntl_nt_type%TYPE
                      ,pi_ntl_layer_id      nm_type_layers_all.ntl_layer_id%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NTL_PK constraint
--
PROCEDURE lock_ntl_all (pi_ntl_nt_type       nm_type_layers_all.ntl_nt_type%TYPE
                       ,pi_ntl_layer_id      nm_type_layers_all.ntl_layer_id%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsc">
--
--   Function to lock using NSC_PK constraint
--
FUNCTION lock_nsc (pi_nsc_nw_type       nm_type_subclass.nsc_nw_type%TYPE
                  ,pi_nsc_sub_class     nm_type_subclass.nsc_sub_class%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSC_PK constraint
--
PROCEDURE lock_nsc (pi_nsc_nw_type       nm_type_subclass.nsc_nw_type%TYPE
                   ,pi_nsc_sub_class     nm_type_subclass.nsc_sub_class%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nsr">
--
--   Function to lock using NSR_PK constraint
--
FUNCTION lock_nsr (pi_nsr_nw_type            nm_type_subclass_restrictions.nsr_nw_type%TYPE
                  ,pi_nsr_sub_class_new      nm_type_subclass_restrictions.nsr_sub_class_new%TYPE
                  ,pi_nsr_sub_class_existing nm_type_subclass_restrictions.nsr_sub_class_existing%TYPE
                  ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NSR_PK constraint
--
PROCEDURE lock_nsr (pi_nsr_nw_type            nm_type_subclass_restrictions.nsr_nw_type%TYPE
                   ,pi_nsr_sub_class_new      nm_type_subclass_restrictions.nsr_sub_class_new%TYPE
                   ,pi_nsr_sub_class_existing nm_type_subclass_restrictions.nsr_sub_class_existing%TYPE
                   ,pi_raise_not_found        BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode      PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode         PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_un">
--
--   Function to lock using UN_PK constraint
--
FUNCTION lock_un (pi_un_unit_id        nm_units.un_unit_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using UN_PK constraint
--
PROCEDURE lock_un (pi_un_unit_id        nm_units.un_unit_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_uc">
--
--   Function to lock using UC_PK constraint
--
FUNCTION lock_uc (pi_uc_unit_id_in     nm_unit_conversions.uc_unit_id_in%TYPE
                 ,pi_uc_unit_id_out    nm_unit_conversions.uc_unit_id_out%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using UC_PK constraint
--
PROCEDURE lock_uc (pi_uc_unit_id_in     nm_unit_conversions.uc_unit_id_in%TYPE
                  ,pi_uc_unit_id_out    nm_unit_conversions.uc_unit_id_out%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_ud">
--
--   Function to lock using UK_PK constraint
--
FUNCTION lock_ud (pi_ud_domain_id      nm_unit_domains.ud_domain_id%TYPE
                 ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                 ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                 ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                 ) RETURN ROWID;
--
--   Procedure to lock using UK_PK constraint
--
PROCEDURE lock_ud (pi_ud_domain_id      nm_unit_domains.ud_domain_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nuf">
--
--   Function to lock using NUF_PK constraint
--
FUNCTION lock_nuf (pi_name              nm_upload_files.name%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NUF_PK constraint
--
PROCEDURE lock_nuf (pi_name              nm_upload_files.name%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nufp">
--
--   Function to lock using NUFPART_PK constraint
--
FUNCTION lock_nufp (pi_document          nm_upload_filespart.document%TYPE
                   ,pi_part              nm_upload_filespart.part%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NUFPART_PK constraint
--
PROCEDURE lock_nufp (pi_document          nm_upload_filespart.document%TYPE
                    ,pi_part              nm_upload_filespart.part%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nua">
--
--   Function to lock using NUA_PK constraint
--
FUNCTION lock_nua (pi_nua_user_id       nm_user_aus.nua_user_id%TYPE
                  ,pi_nua_admin_unit    nm_user_aus.nua_admin_unit%TYPE
                  ,pi_nua_start_date    nm_user_aus.nua_start_date%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NUA_PK constraint
--
PROCEDURE lock_nua (pi_nua_user_id       nm_user_aus.nua_user_id%TYPE
                   ,pi_nua_admin_unit    nm_user_aus.nua_admin_unit%TYPE
                   ,pi_nua_start_date    nm_user_aus.nua_start_date%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--
--   Function to lock using NUA_PK constraint (without start date for Datetrack View)
--
FUNCTION lock_nua (pi_nua_user_id       nm_user_aus.nua_user_id%TYPE
                  ,pi_nua_admin_unit    nm_user_aus.nua_admin_unit%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NUA_PK constraint (without start date for Datetrack View)
--
PROCEDURE lock_nua (pi_nua_user_id       nm_user_aus.nua_user_id%TYPE
                   ,pi_nua_admin_unit    nm_user_aus.nua_admin_unit%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nua_all">
--
--   Function to lock using NUA_PK constraint
--
FUNCTION lock_nua_all (pi_nua_user_id       nm_user_aus_all.nua_user_id%TYPE
                      ,pi_nua_admin_unit    nm_user_aus_all.nua_admin_unit%TYPE
                      ,pi_nua_start_date    nm_user_aus_all.nua_start_date%TYPE
                      ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                      ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                      ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                      ) RETURN ROWID;
--
--   Procedure to lock using NUA_PK constraint
--
PROCEDURE lock_nua_all (pi_nua_user_id       nm_user_aus_all.nua_user_id%TYPE
                       ,pi_nua_admin_unit    nm_user_aus_all.nua_admin_unit%TYPE
                       ,pi_nua_start_date    nm_user_aus_all.nua_start_date%TYPE
                       ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                       ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                       ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                       );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nva">
--
--   Function to lock using NVA_PK constraint
--
FUNCTION lock_nva (pi_nva_id            nm_visual_attributes.nva_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NVA_PK constraint
--
PROCEDURE lock_nva (pi_nva_id            nm_visual_attributes.nva_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxf">
--
--   Function to lock using NM_XML_FILES_PK constraint
--
FUNCTION lock_nxf (pi_nxf_file_type     nm_xml_files.nxf_file_type%TYPE
                  ,pi_nxf_type          nm_xml_files.nxf_type%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_XML_FILES_PK constraint
--
PROCEDURE lock_nxf (pi_nxf_file_type     nm_xml_files.nxf_file_type%TYPE
                   ,pi_nxf_type          nm_xml_files.nxf_type%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxb">
--
--   Function to lock using NM_XML_BATCHES_PK constraint
--
FUNCTION lock_nxb (pi_nxb_batch_id      nm_xml_load_batches.nxb_batch_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NM_XML_BATCHES_PK constraint
--
PROCEDURE lock_nxb (pi_nxb_batch_id      nm_xml_load_batches.nxb_batch_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxle">
--
--   Function to lock using NM_XML_LOAD_ERRORS_PK constraint
--
FUNCTION lock_nxle (pi_nxl_batch_id      nm_xml_load_errors.nxl_batch_id%TYPE
                   ,pi_nxl_record_id     nm_xml_load_errors.nxl_record_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NM_XML_LOAD_ERRORS_PK constraint
--
PROCEDURE lock_nxle (pi_nxl_batch_id      nm_xml_load_errors.nxl_batch_id%TYPE
                    ,pi_nxl_record_id     nm_xml_load_errors.nxl_record_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nwx">
--
--   Function to lock using NWX_PK constraint
--
FUNCTION lock_nwx (pi_nwx_nw_type       nm_nw_xsp.nwx_nw_type%TYPE
                  ,pi_nwx_x_sect        nm_nw_xsp.nwx_x_sect%TYPE
                  ,pi_nwx_nsc_sub_class nm_nw_xsp.nwx_nsc_sub_class%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NWX_PK constraint
--
PROCEDURE lock_nwx (pi_nwx_nw_type       nm_nw_xsp.nwx_nw_type%TYPE
                   ,pi_nwx_x_sect        nm_nw_xsp.nwx_x_sect%TYPE
                   ,pi_nwx_nsc_sub_class nm_nw_xsp.nwx_nsc_sub_class%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxd">
--
--   Function to lock using NXD_PK constraint
--
FUNCTION lock_nxd (pi_nxd_rule_id       nm_x_driving_conditions.nxd_rule_id%TYPE
                  ,pi_nxd_rule_seq_no   nm_x_driving_conditions.nxd_rule_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NXD_PK constraint
--
PROCEDURE lock_nxd (pi_nxd_rule_id       nm_x_driving_conditions.nxd_rule_id%TYPE
                   ,pi_nxd_rule_seq_no   nm_x_driving_conditions.nxd_rule_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxe">
--
--   Function to lock using NXE_PK constraint
--
FUNCTION lock_nxe (pi_nxe_id            nm_x_errors.nxe_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NXE_PK constraint
--
PROCEDURE lock_nxe (pi_nxe_id            nm_x_errors.nxe_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxic">
--
--   Function to lock using NXIC_PK constraint
--
FUNCTION lock_nxic (pi_nxic_id           nm_x_inv_conditions.nxic_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   ) RETURN ROWID;
--
--   Procedure to lock using NXIC_PK constraint
--
PROCEDURE lock_nxic (pi_nxic_id           nm_x_inv_conditions.nxic_id%TYPE
                    ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                    ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                    ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                    );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxl">
--
--   Function to lock using NXL_PK constraint
--
FUNCTION lock_nxl (pi_nxl_rule_id       nm_x_location_rules.nxl_rule_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NXL_PK constraint
--
PROCEDURE lock_nxl (pi_nxl_rule_id       nm_x_location_rules.nxl_rule_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxn">
--
--   Function to lock using NXN_PK constraint
--
FUNCTION lock_nxn (pi_nxn_rule_id       nm_x_nw_rules.nxn_rule_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NXN_PK constraint
--
PROCEDURE lock_nxn (pi_nxn_rule_id       nm_x_nw_rules.nxn_rule_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxr">
--
--   Function to lock using PK_NM_X_RULES constraint
--
FUNCTION lock_nxr (pi_nxr_rule_id       nm_x_rules.nxr_rule_id%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using PK_NM_X_RULES constraint
--
PROCEDURE lock_nxr (pi_nxr_rule_id       nm_x_rules.nxr_rule_id%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_nxv">
--
--   Function to lock using NXV_PK constraint
--
FUNCTION lock_nxv (pi_nxv_rule_id       nm_x_val_conditions.nxv_rule_id%TYPE
                  ,pi_nxv_rule_seq_no   nm_x_val_conditions.nxv_rule_seq_no%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using NXV_PK constraint
--
PROCEDURE lock_nxv (pi_nxv_rule_id       nm_x_val_conditions.nxv_rule_id%TYPE
                   ,pi_nxv_rule_seq_no   nm_x_val_conditions.nxv_rule_seq_no%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_xsr">
--
--   Function to lock using XSR_PK constraint
--
FUNCTION lock_xsr (pi_xsr_nw_type       nm_xsp_restraints.xsr_nw_type%TYPE
                  ,pi_xsr_ity_inv_code  nm_xsp_restraints.xsr_ity_inv_code%TYPE
                  ,pi_xsr_scl_class     nm_xsp_restraints.xsr_scl_class%TYPE
                  ,pi_xsr_x_sect_value  nm_xsp_restraints.xsr_x_sect_value%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using XSR_PK constraint
--
PROCEDURE lock_xsr (pi_xsr_nw_type       nm_xsp_restraints.xsr_nw_type%TYPE
                   ,pi_xsr_ity_inv_code  nm_xsp_restraints.xsr_ity_inv_code%TYPE
                   ,pi_xsr_scl_class     nm_xsp_restraints.xsr_scl_class%TYPE
                   ,pi_xsr_x_sect_value  nm_xsp_restraints.xsr_x_sect_value%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="lock_xrv">
--
--   Function to lock using XRV_PK constraint
--
FUNCTION lock_xrv (pi_xrv_nw_type       nm_xsp_reversal.xrv_nw_type%TYPE
                  ,pi_xrv_old_sub_class nm_xsp_reversal.xrv_old_sub_class%TYPE
                  ,pi_xrv_old_xsp       nm_xsp_reversal.xrv_old_xsp%TYPE
                  ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                  ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                  ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                  ) RETURN ROWID;
--
--   Procedure to lock using XRV_PK constraint
--
PROCEDURE lock_xrv (pi_xrv_nw_type       nm_xsp_reversal.xrv_nw_type%TYPE
                   ,pi_xrv_old_sub_class nm_xsp_reversal.xrv_old_sub_class%TYPE
                   ,pi_xrv_old_xsp       nm_xsp_reversal.xrv_old_xsp%TYPE
                   ,pi_raise_not_found   BOOLEAN     DEFAULT TRUE
                   ,pi_not_found_sqlcode PLS_INTEGER DEFAULT -20000
                   ,pi_locked_sqlcode    PLS_INTEGER DEFAULT -20000
                   );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
   PRAGMA RESTRICT_REFERENCES (get_version, RNDS, WNPS, WNDS);
   PRAGMA RESTRICT_REFERENCES (get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
END nm3lock_gen;
/
