create or replace package nm3mrg_toolkit as
--<PACKAGE>
-------------------------------------------------------------------------
--   PVCS Identifiers :-
--
--       PVCS id          : $Header:   //vm_latest/archives/nm3/admin/pck/nm3mrg_toolkit.pkh-arc   2.1   Jan 06 2010 16:41:32   cstrettle  $
--       Module Name      : $Workfile:   nm3mrg_toolkit.pkh  $
--       Date into PVCS   : $Date:   Jan 06 2010 16:41:32  $
--       Date fetched Out : $Modtime:   Jan 05 2010 11:42:36  $
--       Version          : $Revision:   2.1  $
--       Based on SCCS version : 1.1
-------------------------------------------------------------------------
--   Author : Jonathan Mills
--
--   Merge Additional Tools package
--
-----------------------------------------------------------------------------
--   Copyright (c) exor corporation ltd, 2003
-----------------------------------------------------------------------------
--</PACKAGE>
--<GLOBVAR>
  g_sccsid CONSTANT VARCHAR2(2000) := '$Revision:   2.1  $';
--  g_sccsid is the SCCS ID for the package
--</GLOBVAR>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_VERSION">
-- This function returns the current SCCS version
FUNCTION get_version RETURN varchar2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="GET_BODY_VERSION">
-- This function returns the current SCCS version of the package body
FUNCTION get_body_version RETURN varchar2;
--</PROC>
--
------------------------------------------------------------------------------------------------
--
--<PROC NAME="copy_mrg_query">
-- This function copies a pre-existing merge query
--
FUNCTION copy_mrg_query (pi_nmq_id_old     IN nm_mrg_query.nmq_id%TYPE
                        ,pi_nmq_unique_new IN nm_mrg_query.nmq_unique%TYPE
                        ,pi_nmq_descr_new  IN nm_mrg_query.nmq_descr%TYPE  DEFAULT NULL
                        ,pi_create_views   IN BOOLEAN                      DEFAULT TRUE
                        ) RETURN nm_mrg_query.nmq_id%TYPE;
--
FUNCTION copy_mrg_query (pi_nmq_unique_old IN nm_mrg_query.nmq_unique%TYPE
                        ,pi_nmq_unique_new IN nm_mrg_query.nmq_unique%TYPE
                        ,pi_nmq_descr_new  IN nm_mrg_query.nmq_descr%TYPE  DEFAULT NULL
                        ,pi_create_views   IN BOOLEAN                      DEFAULT TRUE
                        ) RETURN nm_mrg_query.nmq_id%TYPE;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="add_condition_to_query">
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 );
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 ,pi_value             IN nm_mrg_query_values.nqv_value%TYPE
                                 );
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 ,pi_tab_values        IN nm3type.tab_varchar2000
                                 );
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_iit_x_sect        IN nm_inv_items.iit_x_sect%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 );
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_iit_x_sect        IN nm_inv_items.iit_x_sect%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 ,pi_value             IN nm_mrg_query_values.nqv_value%TYPE
                                 );
--
PROCEDURE add_condition_to_query (pi_nmq_id            IN nm_mrg_query.nmq_id%TYPE
                                 ,pi_nit_inv_type      IN nm_inv_types.nit_inv_type%TYPE
                                 ,pi_iit_x_sect        IN nm_inv_items.iit_x_sect%TYPE
                                 ,pi_ita_view_col_name IN nm_inv_type_attribs.ita_view_col_name%TYPE
                                 ,pi_nqa_condition     IN nm_mrg_query_attribs.nqa_condition%TYPE
                                 ,pi_tab_values        IN nm3type.tab_varchar2000
                                 );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="insert_mrg_results_into_table">
--
PROCEDURE insert_mrg_results_into_table (pi_nqr_job_id          IN nm_mrg_query_results.nqr_mrg_job_id%TYPE
                                        ,pi_view_name           IN VARCHAR2
                                        ,pi_table_name          IN VARCHAR2
                                        ,pi_view_mrg_job_id_col IN VARCHAR2
                                        ,pi_grr_job_id          IN gri_report_runs.grr_job_id%TYPE DEFAULT NULL
                                        ,pi_grr_job_id_col      IN VARCHAR2                        DEFAULT NULL
                                        );
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_tab_grp_for_mrg_conditions">
--
FUNCTION get_tab_grp_for_mrg_conditions (pi_grp_job_id IN gri_run_parameters.grp_job_id%TYPE
                                        ,pi_grp_param  IN gri_run_parameters.grp_param%TYPE
                                        ) RETURN nm3type.tab_varchar2000;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PROC NAME="get_condition_from_array_count">
--
FUNCTION get_condition_from_array_count (pi_array_count IN BINARY_INTEGER
                                        ) RETURN VARCHAR2;
--</PROC>
--
-----------------------------------------------------------------------------
--
--<PRAGMA>
   PRAGMA RESTRICT_REFERENCES (get_version, RNDS, WNPS, WNDS);
   PRAGMA RESTRICT_REFERENCES (get_body_version, RNDS, WNPS, WNDS);
--</PRAGMA>
--
-----------------------------------------------------------------------------
--
end nm3mrg_toolkit;
/
