create or replace type body nm_analytic_chunk_type
is
--
-----------------------------------------------------------------------------
--
--   SCCS Identifiers :-
--
--       sccsid           : @(#)nm_analytic_chunk_type.tyb	1.1 02/01/07
--       Module Name      : nm_analytic_chunk_type.tyb
--       Date into SCCS   : 07/02/01 16:25:56
--       Date fetched Out : 07/06/13 17:04:20
--       SCCS Version     : 1.1
--
--   Author : Priidu Tanava
--
--   This type supports the custom aggregate function group_chunk_no_seq()
--   The actual processing logic is implemented in package nm3bulk_mrg_analytic
--
-----------------------------------------------------------------------------
--   Copyright (c) exor corporation ltd, 2006
-----------------------------------------------------------------------------

static function ODCIAggregateInitialize(sctx IN OUT nm_analytic_chunk_type) 
return number is 
begin
  sctx := nm_analytic_chunk_type(null);
  --dbms_output.put_line('ODCIAggregateInitialize');
  nm3bulk_mrg_analytic.chunk_no_init;
  return ODCIConst.Success;
end;

member function ODCIAggregateIterate(self IN OUT nm_analytic_chunk_type, value IN varchar2) 
return number is
  i       binary_integer;
begin
  i := nm3bulk_mrg_analytic.chunk_no_iterate(value);
  --dbms_output.put_line('ODCIAggregateIterate: '||i||' '||value);
  return ODCIConst.Success;
end;

member function ODCIAggregateTerminate(self IN nm_analytic_chunk_type, returnValue OUT 
varchar2, flags IN number) return number is
begin  
  returnValue := nm3bulk_mrg_analytic.chunk_terminate;
  --dbms_output.put_line('ODCIAggregateTerminate: '||returnValue);
  return ODCIConst.Success;
end;

-- the logic does not handle parallel processing so merge not allowed
-- the parallel processing is also unneeded as we don't operate on large sets here
--  the maximum number of records is the number of members under a route.
member function ODCIAggregateMerge(self IN OUT nm_analytic_chunk_type, ctx2 IN 
nm_analytic_chunk_type) return number is
begin
  return ODCIConst.Error;
end;
end;
/
